(this["webpackJsonpmal-app"]=this["webpackJsonpmal-app"]||[]).push([[0],{22:function(e){e.exports=JSON.parse('[{"id":1664044200000,"title":"Moving from Wordpress to Github Pages","author":"Malik","date":"September 25, 2022","content":"\\n### Starting with Blogger\\nI started blogging few years ago when I was still new to programming. I wasn\'t really sure what to blog, but I wrote bits and pieces of what I thought fascinating. I started off with [blogger](https://lazydevguy.blogspot.com/) platform back in 2014. Interestingly my very first blog post on the internet is about creating infinite energy out of a buttered cat which is [called buttered cat paradox](http://en.wikipedia.org/wiki/Buttered_cat_paradox) \ud83d\ude48. Now when I look back, I am not really sure why I spent time on blogging about something so stupid and meaningless. Similarly when I look at some of the older posts I have written, I cannot really understand what was going through my mind. This is similar to some of us react to our older tweets and facebook posts I guess. Top cringeworthy \ud83d\ude00.\\n\\n### Moving from Blogger to Wordpress\\nAfter a while, I started migrating from blogger to Wordpress. Mostly because the blogger platform UI started to get too boring for me and Wordpress offered many cool features for free which blogger didn\'t provide at that time. For example, Wordpress had a nicer admin panel where we could edit articles more efficiently. I was happy with Wordpress for few more years where i have written handful of articles.\\n\\n### Moving from Wordpress to Github Pages\\nBack in 2020 June, I posted my last article on Wordpress. I remember writing this article while serving my 2 weeks [quarantine period](https://www.instagram.com/p/CBFRXnCjSvzsC7xx9iiky9FXD_8hsXVlh3BeHc0/). Not entirely sure why I stopped writing since then. I think one reason could be because I was spending more time with my daughter and I had less time for other activities such as gaming, reading, regular exercising as well as blogging.\\n\\nFew months ago, one of the old articles i have written got featured on my company [blog](https://loyalty.dev/posts/lessons-ive-learnt-as-a-code-reviewer) which actually reminded me that I used to blog \ud83d\ude00, However my current Wordpress blog didn\'t interest me enough to write new stuff. I wanted something new and something of my own to make my self motivated to start writing again. This is why I started moving to Github pages.\\n\\n### Why Github Pages\\nGithub Pages wasn\'t my first choice. I looked at some popular choices during this period such as Hugo and Jekyll. But I chose GH Pages for few reasons.\\n1. Quite easy to setup.\\n2. Tied to your Github account, so you get a domain with your Github account.\\n3. Quite flexible with easy configs and can use github actions to automate your workflow.\\n4. It is also free.\\n\\n### Setup specs for the new blog and questions\\nI had few problems I had to solve initially.\\n1. How would I setup the blog with GH pages (basic architecture, technologies)\\n2. How would I write the blog posts and store it.\\n3. How would I serve my blog posts.\\n4. How would I allow comments to be posted for my posts.\\n5. How can I analyse the traffic and data of my readers.\\n\\nAs you can see, writing your own blog from scratch isn\'t that easy and quite honestly there are number of online tools just do these things for you out of the box, so you can just focus only about writing the content and not having to worry about all these setting up. But I was bit stubborn \ud83d\ude43 and I wanted to try creating a blog from scratch.\\n\\n### Learnings so far\\nIt took me few months to motivate myself to complete the setup, migrate all posts and finally write this article after not writing anything for more than 2 years. But I think learnt few new things about creating a blog on my own.\\n\\nhttps://mal90.github.io/ is not 100% complete. But I am off to a decent start. I also have a big backlog of topics I wanted to write here. I just need make free time to put my thoughts and knowledge i have learnt into posts \ud83e\udd1e.\\n\\n### Wrapping things up\\n\\nIn my opinion, everyone who code should write about things they learnt. Even if the topic is trivial and common, when you write about it, you get the chance to dig deeper about it and ultimately you have a real chance of mastering it. When I look back some of the things I have written, I come to realise how insignificant they are. But again, the things I have written those days have definitely helped me to achieve my current position \u270a.\\n\\nExpect a follow up post on the technical details on how I created the blog from scratch.\\n"},{"id":1591209000000,"title":"Debugging a weird front-end issue","author":"Malik","date":"June 4, 2020","content":"\\n## Little bit of background\\n\\nWe use angularjs in one of our SPA app ( Why we still use angularjs in 2020 is a separate topic which needs its own blog post \ud83d\ude42 ). Recently we decided to update JQuery core from 3.4.0. to 3.5.0 which is the latest version todate.\\n\\nSome of the libraries we use in our app are not maintained anymore and depends on JQuery. So when we decided to update we expected some issues would occur from these libraries.\\n\\n### Issue\\n\\nJust as expected after the update, one of our components which basically a date-picker stopped working. Below is part of the code.\\n\\n```\\nexport class DatePickerComponent {\\n  .......\\n  transclude: any = {\\n    iconContent: \\"?iconContent\\",\\n  };\\n  template: string = `\\n    <div ng-class=\\"{ \'date-field\': true, \'is-focused\': $ctrl.isFocused }\\">\\n      <span\\n        ng-click=\\"$ctrl.focusInput()\\"\\n        ng-transclude=\\"iconContent\\"\\n      />\\n      <input\\n        ng-class=\\"$ctrl.inputClass()\\"\\n        type=\\"text\\"\\n        readonly\\n        ng-value=\\"$ctrl.formattedDate()\\"\\n        ng-focus=\\"$ctrl.beginDateSelection()\\"\\n        ng-blur=\\"$ctrl.cancelSelection()\\"\\n      ></input>\\n    </div>\\n  `;\\n}\\n```\\n\\nBut the main problem was not that the date-picker was not working , but there were no console errors whatsoever being thrown by the code. Ah the horror!!!\\n\\n### Debugging journey\\n\\nI started looking for answers in stackoverflow and github issues. But in my case there wasn\u2019t much to go with since there were no errors.\\n\\nSo I did the next best thing I could do. I tried isolating the issue. I started removing line by line until i saw a difference in the behaviour. And just as I remove the below line, the whole date picker started working.\\n\\n```\\n<span\\n ng-click=\\"$ctrl.focusInput()\\"\\n ng-transclude=\\"iconContent\\"\\n/>\\n```\\n\\nSo finally there was some relief. Now I know that this particular line somehow has an issue with the JQuery update. But I don\u2019t know exactly why this ng-transclude causes the entire date picker component to stop working.\\n\\nSo I did some digging to see if there are any connection between JQuery update vs angular ng-transclude directive. I even created a [stackoverflow](https://stackoverflow.com/questions/61767502/ng-transclude-does-not-work-any-more-after-jquery-update/61769848#61769848) question, desperately trying to find an answer. But no help there.\\n\\nSo I decided to dig into the actual source code of ng-transclude. If you don\u2019t know what exactly [ng-transclude](https://github.com/angular/angular.js/blob/master/src/ng/directive/ngTransclude.js) does , basically you can pass a template to a component or directive. In our case we use it to pass an image to the component called iconContent. We render the iconContent in the component.\\n\\nBelow I pasted part of the source-code of ng-transclude, and you can see we have the main function called ngTranscludeCompile , and the first thing we do is, we call .contents() on the tElement which is passed into the ng-transclude.\\n\\n\\n```\\ncompile: function ngTranscludeCompile(tElement) {\\n\\n  //Remove and cache any original content to act as a fallback\\n  var fallbackLinkFn = $compile(tElement.contents());\\n  tElement.empty();\\n```\\n\\nI assumed this tElement is the `<span>` element where we added the ng-transclude=\\"iconContent\\". So the line invokes contents() on this span element and contents() is a JQuery method. Okay now we are getting somewhere with this issue.\\n\\nNext thing I did was looking at the release notes of [JQuery 3.5.0](https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/) update to see if there are any updates to the source code related to contents method. And just as I expected there were couple of changes.\\n\\n![traverse](https://lazydevguy.files.wordpress.com/2020/06/image.png)\\n\\n[https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/](https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/)\\n\\nNow I know that I am getting closer to the root cause of this issue. But I still don\u2019t know what exactly the issue is or how I can possibly fix it. So I decided to look at the code changes for the [JQuery core from 3.4.0 to 3.5.0](https://github.com/jquery/jquery/compare/3.4.0...3.5.0).\\n\\nI looked for all the places where there are changes related to contents() and found there are quite a few changes to the unit test cases which basically asserts cases related to .contents().\\n\\n![jquery1](https://lazydevguy.files.wordpress.com/2020/06/screenshot-2020-06-04-at-9.34.01-pm.png?w=2048)\\n[https://github.com/jquery/jquery/compare/3.4.0\u20263.5.0](https://github.com/jquery/jquery/compare/3.4.0\u20263.5.0)\\n\\n![jquery2](https://lazydevguy.files.wordpress.com/2020/06/screenshot-2020-06-04-at-9.34.35-pm.png?w=2048)\\n[https://github.com/jquery/jquery/compare/3.4.0\u20263.5.0](https://github.com/jquery/jquery/compare/3.4.0\u20263.5.0)\\n\\nAs you can see the issue was right there and I didn\u2019t see it. After the new update, JQuery .contents() doesn\u2019t work well with the html elements which doesn\u2019t use proper closing tags. And below is the code which causes the issue in my case and has the same improper `<span>` tag!\\n\\n```\\n<span\\n ng-click=\\"$ctrl.focusInput()\\"\\n ng-transclude=\\"iconContent\\"\\n/>\\n```\\n\\nSo just as you guessed, right after added `</span>` tag, component started working again. The reason why I did not see any errors because the issue is with the html template so there were no console errors.\\n\\nMain takeaway from this experience for me are\\n\\n\u2013 Always write proper html code.\\n\u2013 Invest on unit tests cause it always pays off.\\n\\nTLDR: I did not close a `<span>` tag properly which caused errors after JQuery update."},{"id":1577730600000,"title":"Lessons I\u2019ve learnt as a code reviewer","author":"Malik","date":"December 31, 2019","content":"\\n### Little bit of background as to why i chose to wrap up this year\\n\\n2019 has been an eventful year for me personally. I left my previous job , moved to Singapore where i got an opportunity to join an amazing [company](https://www.ascendaloyalty.com/) as a senior dev.\\n\\nBefore I joined [Ascenda](https://www.ascendaloyalty.com/), I worked for 4 different companies where I worked on multiple projects and teams. Throughout this period of time, I might have done thousands of lines of code changes and created hundreds of pull requests. But I am embarrassed to say that none of those pull requests have gone through proper code reviewing. Because in any of my previous work places, code reviewing was never really a mandatory step of completing a feature or fixing a bug. So I never really knew or understood how code reviewing can be such an important step in a dev team.\\n\\nBut in Ascenda , it is part of the work culture, that a PR will go through rigorous amount of code reviewing before it is get merged. When I opened my first PR at Ascenda I got overwhelming amount of comments from multiple reviewers and it was so intimidating at first. I couldn\u2019t believe the amount of mistakes were pointed out in my PR. And for a while I was suffering from [imposter syndrome](https://en.wikipedia.org/wiki/Impostor_syndrome).\\n\\n![PRcomments](https://lazydevguy.files.wordpress.com/2019/12/image-1.png)\\nOne of my early PRs had more than 100 of comments from multiple reviewers!\\n\\nBut since then every time I opened a new PR, I minimised the mistakes I made earlier and got to a point where I started to understand the full potential of code reviewing. Then it got better from there when I started to review PRs of others as well.\\n\\n### Code reviews could reveal more about the codebase than you previously knew\\n\\nAs a developer, you need to know about how the application works from top to bottom. But it is not possible to learn the whole mechanism of the app for a developer on his own. Because you will probably be working on a set of features while your colleagues work on some other features. So there is always a gap between the knowledge as you are not expose to the whole development of the app. But when you review PRs, you fill this gap. You get to know more and you will be surprised how handy this new information could become useful for your own tasks in the long run.\\n\\n### You can learn multiple ways to solve a problem\\n\\nWhen you reviewing someone else\u2019s code, you have to think from the other person\u2019s perspective. And this person might not be thinking the same way as you do. This person might have better ways or cleverer ways of finding a solution to a particular problem. These tips collectively will help you to write more efficient code in the future.\\n\\n### You can teach someone else with a better approach\\n\\nThere is nothing more satisfying than teaching something you know to another person. When you review a PR and find out that there is a better way to approach a particular problem, then you can teach your fellow developer about it, which would ultimately beneficial for the entire team. I think this is one of the best ways to improve the team dynamics in development team especially if there are new members in the team.\\n\\n### You can help increase the overall throughput of the team\\n\\nNormally the ratio between developers and QA in a software team is 3:1 Which means that usually in the middle of a Sprint, the QA work is overloaded by lot of features/bugs which need to be tested. The worst thing about this is that sometimes us developers tend to do silly mistakes. When there is no proper code review in place, these issues are detected at the very early stage of QA testing and are sent back to the developer almost instantly. Let me explain this more using an example.\\n\\nScenario: Imagine there is a task which is basically adding a banner text in the app in landing page , in the account page and in also in the email template.\\n\\n1) Developer A , completes the task , creates a PR.\\n\\n2) Developer B approves the PR without conducting proper code review.\\n\\n3) PR is merged to staging and deployed.\\n\\n4) Task is sent to QA , who finds out that the changes are only made in landing page and accounts page but not in email template.\\n\\n5) QA labels it as needs fix. Send back to Developer A who is now working on some other task.\\n\\n6) Developer A again switch back to this PR and fixes it. Again step 2 , 3 happens.\\n\\n7) QA finds out this time, the Developer forgot to change the colour of the text in the email as the task says. And it was again labeled as needs fix and sent back to the Developer A and the cycle continues.\\n\\nIf you look at above scenario , you could see there is a cycle going on. Imagine if Developer B had conducted a proper code review in the first place, He could\u2019ve seen this issue almost immediately and informed Developer A. Because these kind of issues can be seen even without digging into the code. This would\u2019ve minimised the time and the roundtrips between the developer and the QA. Also this would\u2019ve minimised the context switch happens between the cycles for Developer A. This is a major point holding back teams from developing and shipping features as per original estimation and schedule. Teams could overcome this with proper code reviews.\\n\\n### You can identify edge cases early in the development phase\\n\\nThis is I think what code reviews are meant to be in the first place. Usually when you are implementing something complex, you tend to miss the edge cases. Sometimes even the QAs don\u2019t find it because well, those are hidden in the code and overlooked during testing. Especially if they are related to security. But these edge cases could pop up during proper code reviews. It makes more sense if you imagine code reviews are your first line of defence against nasty production bugs!\\n\\n### Code reviews might help you identify performance issues\\n\\nThis is another key point that could be discovered using proper code reviews in place. Imagine a simple scenario where there is a feature which is done using 2 loops. QA sign this off because the feature works as per the requirement. But what the QA doesn\u2019t know is that the feature could be done using a single loop in the implementation therefore reducing the complexity from O(N^2) to O(N). This wouldn\u2019t be a problem when QA tested this against the staging data which is a small dataset compare to production. But when size of N increases (N = size of the incoming data) it could pose a significant performance issue which could\u2019ve been eliminated at the very early stage of the development.\\n\\n### It will help you identify duplicate code\\n\\nWhen you work in code base (especially if it is a multi tenant application), It is imperative that the teams follow one of key principles in software development which is re-usability. Otherwise you will end up with lot of duplicate code which will lead to maintenance hell. Code duplication is not something a QA could find out. So even if the PR contains duplicate code but if it runs according to the spec then it will be the signed off by QA. But this is bad for the codebase. These can be only unearthed during proper code reviews.\\n\\nWrapping things up ..\\n\\nCode reviewing should be embraced as part of the work culture and there is no doubt about it. You could avoid code smells , performance issues and code duplications if proper code reviews put in place. Also it is fun to see how minds of other developers work when finding a solution for a common problem. Most importantly it teaches to be a better developer!\\n\\nThere is so much you could write up more on this topic, will probably do a part II next year \ud83d\ude42 Happy New Year !\\n\\nAlso our super awesome Ascenda Team looking for tech savvy developers to join us, as we are rapidly expanding our team. So if you want to join our team, ping me on below \ud83d\ude42\\n\\nLinkedIn: https://www.linkedin.com/in/maliksalim/\\nEmail: salim.malik@ascendaloyalty.com"},{"id":1545589800000,"title":"How git submodules helped simplify our CI process","author":"Malik","date":"December 24, 2018","content":"## How git submodules helped simplify our CI process\\n\\n## Problem we were trying to solve\\n\\nIn our company, we are developing set of applications , and these applications have their own separate front-ends. Each of these front-end source code is hosted on its own repository.\\n\\nOne of the main problem we\u2019ve encountered when we were trying to create our CI pipeline was , how to create a job in jenkins to build all our front-ends at once. Since we\u2019ve had around 12 repositories (as of now) , the simplest solution would be creating jenkins build jobs for each of the repositories. But it is certainly not the most efficient way. Because as the number of repositories grow , our build jobs also need to grow in parallel. This is also a maintenance nightmare. This is when we\u2019ve discovered about git submodules.\\n\\ngit submodules is an awesome feature to use , say , if you have multiple repositories and if you want to have a central system to manage them all.\\n\\n### What is git submodule ?\\n\\nIn a nutshell , git submodules are having set of child repositories as directories inside another main repository. This child repositories are called as submodules.\\n\\nEach of these submodules will contain the commit reference of the checked out branch from its own repository. Refer the below image.\\n\\n![submodule](https://lazydevguy.files.wordpress.com/2018/12/submodule_with_reference.png)\\n\\nAs we can see from the above image , git submodules are basically has references to the actual repository they represent.\\n\\n### Our solution with git submodules\\n\\nWe have created a single repository called \u201ccombinedui\u201d and added all repositories we needed to build as submodules. Yes, simple as that. Then we created a jenkins build , which will get the latest changes from the submodules and run a docker build where it creates a single docker image by running a series of build commands to build each of these front-ends on to that docker image. And after that it is just a matter of using that docker image for deployment.\\n\\nThe important thing we saw in this method was that all this was happening using a single build job. When we wanted to add another front-end to the build process , all we had to do was just add the respective repository as a submodule to the \u201ccombinedui\u201d main repository and add the build steps to the dockerfile.\\n\\n### HOW TO ADD A SUBMODULE\\n\\nTo add a submodule , you need to first have a git repository. We can call this as the parent repository. Open up a git bash/cmd inside the parent repository and run following command.\\n\\n```\\ngit submodule add \\"git repositry url\\"\\ngit add .\\ngit commit -m \\"this is parent changes commit message\\"\\ngit push origin \\"parent repository\\"\\n```\\n\\nAfter the above command , it will create a .gitmodules file which will keep track of all the submodules and their origins.\\n\\n### STAGING AND COMMITTING NEW SUBMODULE CHANGES\\n\\nWhen adding a new submodule , it will always points to the master branch of that repository. But let say you want to change it to some other branch , for example \u201cdev\u201d branch , below are the steps you need to take.\\n\\n```\\ncd <submodule path>\\ngit checkout dev\\ncd ..\\ngit add .\\ngit commit -m \\"this is parent changes commit message\\"\\ngit push origin \\"parent repository\\"\\n```\\n\\nAs you can see in the above steps , after checking out the dev branch , we have to go back to the parent repository and stage and commit the changes. This will look unusual if you have never used submodules before. But what actually happens is that the parent repository is tracking every single change we do the submodule. So changing the branch of the submodule will actually trigger a change in the parent repository.\\n\\n### HOW TO CLONE A GIT REPOSITORY WITH ALL ITS SUBMODULES\\n\\n```\\ngit clone \\"parent repository url\\"\\ncd <parent repository path>\\ngit submodule update\\n```\\n\\n### PULLING CHANGES FROM ALL THE SUBMODULES\\n\\n```\\ngit pull --recurse-submodules\\n```\\n\\n### EXECUTING A COMMAND ON ALL OF THE SUBMODULES AT ONCE\\n```\\ngit submodule foreach \'git reset --hard\'\\n```\\n\\nUsing \u2018foreach\u2019 command will execute \u2018reset hard\u2019 on all the submodules inside the repository.\\n\\n### DELETING A SUBMODULE FROM THE PARENT REPOSITORY.\\n\\nIn case if you want to delete a submodule and its references from the parent repository , follow below steps\\n\\n- open up the .gitmodules file and delete the section which contains submodule name , path and url\\n- stage and commit this change\\n- open up the config file inside the .git directory and delete the section which contains the submodule name, path and url\\n- run `git rm \u2013cached <path to the submodule>`\\n- run `rm -rf .git/modules/ <path to the submodule>`\\n- stage and commit the changes\\n- remove untracked files from the removed submodule\\n\\n"},{"id":1537554600000,"title":"Convert DOM NodeList to an Array","author":"Malik","date":"September 22, 2018","content":"## Convert DOM NodeList to an Array\\n\\nWhen you work with DOM related implementations using Javascript , a common issue you would face is manipulating a NodeList collection.\\n\\nExample :\\n\\nwhen you use document.querySelectAll(\'some selecter\') , it will return a NodeList which is a collection of html nodes.\\n\\n![nodelist](https://lazydevguy.files.wordpress.com/2018/09/q2.png)\\n\\nAs shown in the above example , this is NodeList appears to be an Array. We can even invoke .length property on it.\\n\\n![nodelist-2](https://lazydevguy.files.wordpress.com/2018/09/q2.png)\\n\\n\\nIf you are new to Javascript , you would probably assume this NodeList to be an Array.  Even i made that mistake when i came across this for the first time.\\n\\nTo test this , Let\u2019s use [Shift()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift) method of Array , which removes the first element of the given Array.\\n\\n![shift](https://lazydevguy.files.wordpress.com/2018/09/shifte.png)\\n\\nWell it didn\u2019t work. To reassure let\u2019s go another step ahead . let\u2019s use instanceof property like below.It returns false. Which means it is not a type of Array.\\n\\n![shift2](https://lazydevguy.files.wordpress.com/2018/09/inaceof.png)\\n\\nOkay, now back to the main problem of this post , how to convert this NodeList to an actual array.\\n\\n### Solution 1\\n\\nusing [].slince.call() method , you can convert a NodeList collection to an Array.\\n\\n![slice](https://lazydevguy.files.wordpress.com/2018/09/call.png)\\n\\nLet\u2019s now test instanceof, shift() on above.\\n\\n![slice-2](https://lazydevguy.files.wordpress.com/2018/09/call2.png)\\n\\nNice, now we know how to convert a NodeList to an Array . Pretty neat , right.\\n\\nSome of you might be wondering  , when we use [].slice.call , what is happening under the hood ?\\n\\n### BREAKDOWN OF [].SLICE.CALL\\n\\n`[]`: This is an array object\\n\\n`[].slice`:  Returns a new array object , Since we have not specified the start and end of the array , it returns an exact copy of that Array.\\n\\n`[].slice.call(nodelist)`: Using call method , you can borrow a function from another object. In this case , Nodelist is borrowing the [].slice() method and using it in own context. Instead of .call , we could use .apply() and it will basically give you the same result.\\n\\n\\n### Solution 2\\n\\nSame thing you could do this without much hassle using ES6 syntax `Array.from()`.\\n\\n![arrayfrom](https://lazydevguy.files.wordpress.com/2018/09/es6.png)\\n\\n![array-from-2](https://lazydevguy.files.wordpress.com/2018/09/es6-ii.png)"},{"id":1527877800000,"title":"How to build a native custom element using Angular Elements","author":"Malik","date":"June 2, 2018","content":"## How to build a native custom element using Angular Elements\\n\\n[Custom elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements) is one of the few ways to create a web component. Angular 6 provides a module called \u2018elements\u2019 to create custom elements easily. Using angular elements , you can create reusable components which can be used outside an angular app.\\n\\nFor example you can use angular elements to create a custom widget and use it in a react or vue application by just importing the build script of the element and adding the custom element tag as follows \u2026\\n\\n```\\n<you-custom-element></your-custom-element>\\n<script src=\\"path to your-custom-element-script.js\\"><\/script>\\n```\\n\\nPretty cool right ? Lets now see how we can build a simple custom element using angular elements library.\\n\\n### Prerequisites:\\nBefore you start creating angular elements , you need to make sure that you have installed Angular 6+ globally. You can check your current ng-cli version by running following command.\\n\\n`> ng --version`\\n\\n![ng-version](https://lazydevguy.files.wordpress.com/2018/06/ng-version.png)\\n\\nIf you don\u2019t have Angular 6+ version installed globally, you could easily do it by running following command.\\n\\n`> npm install -g @angular/cli`\\n\\nAlright now let\u2019s get into the real action.\\n\\n### Step 1: Create new angular project.\\n\\n```\\n> ng new sample-el\\n> cd sample-el\\n```\\n\\n### Spte 2: Add angular elements module to your project.\\n\\n```\\n> ng add @angular/elements\\n```\\n\\n*Notice the ng add we have used here. This is a new angular 6+ feature will make you life easier by downloading dependencies , doing config changes and adding additional dependencies without manual intervention. In this scenario it will add elements modules to your project and document-register-element.js polyfill to your project configuration which is needed for creating custom elements.*\\n\\n### Step 3: Create an Angular Component.\\n\\n```\\n> ng g c sample-element\\n```\\n\\n*Open the sample-element.component.html file and add some simple markup.*\\n\\n![code-1](https://lazydevguy.files.wordpress.com/2018/06/html.png)\\n\\n[https://github.com/mal90/angular-elements-sample/blob/master/src/app/sample-element/sample-element.component.html](https://github.com/mal90/angular-elements-sample/blob/master/src/app/sample-element/sample-element.component.html)\\n\\n*Open sample-element.component.html file and add following code.*\\n\\n![code-2](https://lazydevguy.files.wordpress.com/2018/06/ts1.png)\\n\\n[https://github.com/mal90/angular-elements-sample/blob/master/src/app/sample-element/sample-element.component.ts](https://github.com/mal90/angular-elements-sample/blob/master/src/app/sample-element/sample-element.component.ts)\\n\\n*It is important to note here that we are using Encapsulation.Native , so that our css will be compiled into javascript (instead of separate css file) and bundled into the component itself using the shadom-dom method.*\\n\\n### Step 4: Converting \\"Sample Element\\" component into a custom element\\n\\n![code-3](https://lazydevguy.files.wordpress.com/2018/06/module-ts.png)\\n\\n[https://github.com/mal90/angular-elements-sample/blob/master/src/app/app.module.ts](https://github.com/mal90/angular-elements-sample/blob/master/src/app/app.module.ts)\\n\\n### Importent points to be taken from above implementation in app.module.ts\\n\\n- We\u2019re Importing createCustomElement module from @angular/elements.\\n- Adding our sample element component to entryComponents array. This is because we need to direct the angular application to compile the component since we do not use it anywhere in the application.\\n- We are registering and converting our sample-component to native custom element using createCustomElements.define method.\\n- Finally we are using ngDoBootstrap() to manually bootstrap the app module.\\n\\n\\nAnd we are done. We have created your a simple angular custom element.\\n\\nBut wait , how do we know this is actually working?\\n\\n### Step 5: Creating a single script file out of the Angular Custom Elements\\n\\nFirst we need to install a simple node packages locally.\\n\\n```\\nFirst we need to install a simple node packages locally.\\n\\n```\\n\\nAnd modify the script section of the package.json file like below.\\n\\n![code-5](https://lazydevguy.files.wordpress.com/2018/06/package.png)\\n\\n[https://github.com/mal90/angular-elements-sample/blob/master/package.json](https://github.com/mal90/angular-elements-sample/blob/master/package.json)\\n\\n- we have create a npm script called \u201cbuild\u201d to build our app in prod mode. Also we are making hashing flag to none so that we will get 4 script files with standard names called main, polyfills , runtime and script.\\n- we have npm script called \u201cpackage\u201d to concatenate all 4 files into 1 script file called elements.js so that we can easily import in elsewhere.\\n\\nNow we need run both \u201cbuild \u201cand \u201cpackage\u201d scripts to create our elements.js file using following command\\n\\n```\\n> npm run build && package\\n```\\n\\n### Step 6: Testing our Custom Element in a simple HTTP local server\\n\\nLet\u2019s install the following simple node http server globally.\\n\\n```\\n> npm i http-server -g\\n```\\n\\nLet\u2019s create a index.html file out side of your angular app folder and place the elements.js file in the same location. Your index.html should look like below.\\n\\n![code-6](https://lazydevguy.files.wordpress.com/2018/06/index.png)\\n\\nNow open a cmd in the same location and run the following command.\\n\\n```\\n> http-server\\n```\\n\\n![code-7](https://lazydevguy.files.wordpress.com/2018/06/http-server.png)\\n\\nThis will spin a local http server where you can view your angular custom element you have created completely outside of an angular application. Isn\u2019t it exciting!?\\n\\n![code-8](https://lazydevguy.files.wordpress.com/2018/06/indexhtml1.png)\\n\\nUsing elements you could plug your angular web components in other applications such as vue , react or even in wordpress. But it is still pretty new and for the most part i would say it is still experimental. But it is a solid start.\\n\\nSource of the above application can be found [here](https://github.com/mal90/angular-elements-sample).\\n\\nBelow are few tech talks by some industry experts you could refer to learn about angular elements.\\n\\n- [A look into the future: Angular Elements \u2013 Antal Andrei](https://www.youtube.com/watch?v=-pS8M_RBf84)\\n- [Elements in v6 and Beyond \u2013 Rob Wormald](https://www.youtube.com/watch?v=Z1gLFPLVJjY)\\n- [Angular Elements by Pascal Precht](https://lazydevguy.wordpress.com/2018/01/18/angular-module-import-issue-error-cant-resolve-angular-core-src/)\\n"},{"id":1527359400000,"title":"Issue creating Angular custom elements on Stackblitz. Error Failed to construct \u2018HTMLElement\u2019 Please use the \u2018new\u2019 \u2026\u201d","author":"Malik","date":"May 27, 2018","content":"## Issue creating Angular custom elements on Stackblitz. Error Failed to construct \u2018HTMLElement\u2019 Please use the \u2018new\u2019 \u2026\u201d\\n\\nAngular elements is the newest addition to web component development . It was released with Angular 6 release. If you create an Angular element application in stackblitz you might come across the following issue.\\n\\n```js\\nError: Failed to construct \u2018HTMLElement\u2019: Please use the \u2018new\u2019 operator, this DOM object constructor cannot be called as a function.\\n```\\n\\nTo overcome this issue , you need to add this shim to the external resources section in your stackblitz app.\\n\\nCheck out the following very simple hello-world angular elements application made on stackblitz"},{"id":1525631400000,"title":"Useful 10 git commands","author":"Malik","date":"May 7, 2018","content":"## Useful 10 git commands\\n\\n\\n- `git checkout -b <branchname>` :  create a branch from the parent branch and checkout the branch.\\n- `git checkout \u2013` : switch between 2 branches. (between last branch and the current branch)\\n- `git diff <filename>` : dump the changes of the file in the console by comparing it with the unmodifed file.\\n- `git add . && git commit -m \u201ccommit message\u201d` : add all the changes and commit with a message. Here basically we are executing 2 commands with \u2018&&\u2019.\\n- `git log \u2013oneline` : get all the commit messages in the current branch and display in one line with the hashcode.\\n- `git branch -a `: view  all local and remote branches in the repositories.\\n- `git branch -D <branchname>` : delete a local (un-merged) branch. Note you cannot delete a branch when it is your current branch.\\n- `git push origin :<branchname>` : delete a remote branch.\\n- `git fetch origin <branchname>` : fetch a specific remote branch without getting all the remote changes.\\n- `git reset \u2013hard <commit-hash>` : reset your local commit history to a specific commit-hash. Note after this reset , the changes will be permanently lost. If you - do not want to lose permanently use \u2013soft instead."},{"id":1520706600000,"title":"Dynamic routing in Angular using canActivate() Part II","author":"Malik","date":"March 11, 2018","content":"\\nIn the first part we have looked at how we can have dynamic routing using canActivate(). However there is a fundamental issue we will face here .\\n\\nDynamic routing created in front-end is not persistent. When the user refreshes the browser or when he tries to access the new route using URL , it will not load.\\n\\nTo overcome this problem the solution is to persisting the new route data temporarily in local-storage of the browser .\\n\\nFollowing gist demonstrate how to implement persistence with dynamic routing.\\n\\n```\\nimport { RouteGuardService } from \'./routeguard.service\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Router , Route }    from \'@angular/router\';\\n\\n\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.css\']\\n})\\nexport class AppComponent implements OnInit{\\n\\n  constructor(private router: Router,private routeGuardService : RouteGuardService) {}\\n\\n  ngOnInit(){\\n  }\\n\\n  addRoute(){\\n    this.routeGuardService.setRouteGuard();\\n  }\\n\\n  removeRoute(){\\n    this.routeGuardService.removeRouteGuard();\\n  }\\n}\\n```\\n\\n```\\nimport { Module2Component } from \'./module2/module2.component\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\n\\n\\nimport { AppComponent } from \'./app.component\';\\nimport { DynamicModuleComponent } from \'./dynamicmodule/dynamicmodule.component\';\\nimport { RouteGuardService } from \'./routeguard.service\';\\nimport { DefaultComponent } from \'./default/default.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: DefaultComponent\\n  },\\n  {\\n    path: \'dynamicmodule\',\\n    component: DynamicModuleComponent,\\n    /** following line needs to be added to trigger canActivate() in routeguardservice class*/\\n    canActivate: [RouteGuardService],\\n    data: {\\n      module: \\"dynamicmodule\\"\\n    }\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent,\\n    DynamicModuleComponent,\\n    DefaultComponent\\n  ],\\n  imports: [\\n    BrowserModule,\\n    RouterModule.forRoot( routes)\\n  ],\\n  providers: [RouteGuardService],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n```\\n\\n```\\nimport { CanActivate } from \'@angular/router\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Router , Route }    from \'@angular/router\';\\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from \'@angular/router/src/router_state\';\\nimport { Observable } from \'rxjs/Observable\';\\n\\n@Injectable()\\nexport class RouteGuardService implements CanActivate{\\n\\n    constructor(private router: Router){\\n\\n    }\\n\\n    setRouteGuard(newModule){\\n        let isAdded = false;\\n        var moduleObjArr = this.getStorageItems();\\n\\n        for (let moduleObj of moduleObjArr) {\\n            /*Check if the new module is already added to localstorage routing json obj*/\\n            if(moduleObj.module === newModule){\\n                isAdded = true;\\n            }\\n        }\\n\\n        if(!isAdded){\\n            /* Add the new dynamic module to the local storage json obj*/\\n            moduleObjArr.push({module:newModule});\\n            localStorage.setItem(\\"modules\\",JSON.stringify(moduleObjArr));\\n        }\\n    }\\n\\n    removeRouteGuard(newModule){\\n        /* When removing a dynamic module from routing*/\\n        var moduleObjArr = this.getStorageItems();\\n        var newModuleObjArr = moduleObjArr.filter(item => item.module !== newModule);\\n        localStorage.setItem(\\"modules\\",JSON.stringify(newModuleObjArr));\\n    }\\n\\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean{\\n        var moduleObjArr = this.getStorageItems();\\n        console.log(next.data[\\"module\\"]);\\n        let canActivate = false;\\n        /* Activate routing based on the routing json obj*/\\n        for (let module of moduleObjArr) {\\n            if(module.module === next.data[\\"module\\"]){\\n                canActivate = true ;\\n            }\\n        };\\n        return canActivate;\\n    }\\n\\n    getStorageItems(){\\n        /* Common method to retrive route module obj array from localstorage*/\\n        let moduleObjArr = eval(\'(\' + localStorage.getItem(\\"modules\\") + \')\');\\n        return moduleObjArr === null ? [{}] : moduleObjArr;\\n    }\\n\\n}\\n```\\n\\nFew important things to notice in the gist.\\n\\n- local-storage of the browser is used to persist route data as a json object.\\n- canActivate takes this array to apply the dynamic routing to the modules.\\n- When applying a new module to dynamic routing first we need to check whether it is already existing the route obj array.\\n- This data is  volatile , means that it depends on user\u2019s browser.\\n\\nI have created a sample angular application based on what we have covered in dynamic routing. https://github.com/mal90/ng-dynamic-route"},{"id":1519756200000,"title":" Dynamic routing in Angular using canActivate() Part 1","author":"Malik","date":"February 28, 2018","content":"\\nUse case : Assume a scenario where you have to add dynamic routing to an Angular application which accommodate following requirements.\\n\\n- User should be able to add or remove \u201cexisting components\u201d to the route object dynamically.\\n- After adding a specific routing dynamically , user should be able to access the component by typing the URL.\\n- The newly added routing should persistent.\\n- When page reloads(and application context reinitialize)  , dynamically added routing should be applied.\\n- Angular provides an interface , canActivate , to provide the capability of activating a specific routing on-the-fly . This interface contains canActivate() which returns a Boolean.\\n\\nThis gist demonstrates a simple example on how we can use [canActivate](https://angular.io/api/router/CanActivate) to achieve dynamic routing.\\n\\n[This](https://gist.github.com/mal90/a2cd5233da039be35cb61e17a135b62f) gist demonstrates a simple example on how we can use canActivate to achieve dynamic routing.\\n\\n```\\nimport { RouteGuardService } from \'./routeguard.service\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Router , Route }    from \'@angular/router\';\\n\\n\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.css\']\\n})\\nexport class AppComponent implements OnInit{\\n\\n  constructor(private router: Router,private routeGuardService : RouteGuardService) {}\\n\\n  ngOnInit(){\\n  }\\n\\n  addRoute(){\\n    this.routeGuardService.setRouteGuard();\\n  }\\n\\n  removeRoute(){\\n    this.routeGuardService.removeRouteGuard();\\n  }\\n}\\n```\\n\\n```\\nimport { Module2Component } from \'./module2/module2.component\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\n\\n\\nimport { AppComponent } from \'./app.component\';\\nimport { DynamicModuleComponent } from \'./dynamicmodule/dynamicmodule.component\';\\nimport { RouteGuardService } from \'./routeguard.service\';\\nimport { DefaultComponent } from \'./default/default.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: DefaultComponent\\n  },\\n  {\\n    path: \'dynamicmodule\',\\n    component: DynamicModuleComponent,\\n    /** following line needs to be added to trigger canActivate() in routeguardservice class*/\\n    canActivate: [RouteGuardService],\\n    data: {\\n      module: \\"dynamicmodule\\"\\n    }\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent,\\n    DynamicModuleComponent,\\n    DefaultComponent\\n  ],\\n  imports: [\\n    BrowserModule,\\n    RouterModule.forRoot( routes)\\n  ],\\n  providers: [RouteGuardService],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n```\\n\\n```\\nimport { CanActivate } from \'@angular/router\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Router , Route }    from \'@angular/router\';\\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from \'@angular/router/src/router_state\';\\nimport { Observable } from \'rxjs/Observable\';\\n\\n@Injectable()\\nexport class RouteGuardService implements CanActivate{\\n    activate : boolean = false;\\n\\n    constructor(private router: Router){\\n\\n    }\\n\\n    setRouteGuard(){\\n       this.activate = true ;\\n    }\\n\\n    removeRouteGuard(){\\n       this.activate = false ;\\n    }\\n\\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot):\\n    Observable<boolean> | Promise<boolean> | boolean{\\n        /**\\n         * Here the logic can be implemented to activate and deactivate the route service.\\n         *\\n         */\\n        return this.activate;\\n    }\\n\\n}\\n```\\n\\nHowever this solution leads to the following problem\u2026\\n\\nDynamically added routing will not be accessible by URL . Which means whatever the newly added routing is not persistent. Part II of this blog post series will cover persistence of dynamically added routing. Stay tuned \u2026!"},{"id":1516213800000,"title":" Angular module import issue. Error Can\u2019t resolve @angular/core/src/..","author":"Malik","date":"January 18, 2018","content":"## Angular module import issue. Error Can\u2019t resolve @angular/core/src/..\\n\\nIf you are using Angular 4 or greater version, you might come across following issue.\\n\\n```\\nError: Can\u2019t resolve \u2018@angular/core/src/event_emitter\u2019\\nError: Can\u2019t resolve \u2018@angular/core/src/metadata/directives\u2019\\n```\\n\\n![angular-dep-error](https://lazydevguy.files.wordpress.com/2018/01/angular-issue.png)\\n\\nIf you are using vscode, chances are this issue will occur frequently.\\n\\n### Reason and How to fix\\n\\nSince angular 4 [deep imports](https://github.com/angular/angular/blob/master/docs/PUBLIC_API.md) are not supported.\\n\\nBefore Angular 4 you could do this, for example ..\\n\\n`import { EventEmitter} from \u2018@angular/core/src/event_emitter\u2019`\\n\\nbut now in Angular 4 you can only go to *the first level*\\n\\n`import { EventEmitter } from \u2018@angular/core\u2019`\\n\\n\\n"},{"id":1514658600000,"title":" AngularJS, Angular 2, Angular 4, Angular 5 naming confusion","author":"Malik","date":"December 31, 2017","content":"## AngularJS, Angular 2, Angular 4, Angular 5 naming confusion\\n\\nI have seen even experienced front end developers doing the mistake of using incorrect terms for the angular(js) version they are using.\\n\\nThis simple blog post is trying to address this issue.\\n\\n### AngularJS 1.X\\n\\nAnything which comes under AngularJS 1.X  can be called as AngularJS or Angular . JS\\n\\n### Angular 2.X.X\\n\\n--------------------------\\n\\n### Following statement is wrong!\\n\\nI am using AngularJS 2.\\n\\n--------------------------\\n\\nIf you are using Angular 2.X.X or higher version then your application using Angular platform. Depending the version it can be Angular 2 , Angular 4 or Angular 5.\\n\\nExample :\\n\\nAngular 2.X.X is angular 2\\nAngular 4.X.X is angular 4\\n\\nAngular 2 is complete paradigm shift from original AngularJS platform .  Another important point is Angular 2 is not backward compatible with AngularJS .\\n\\nSince angular 2.X.X on wards they have started using semantic versioning . Which means Major version number will be changed for any breaking changes to the core of the library.\\n\\n*After 2.X.X , next released version of Angular was 4.X.X and current version is Angular 5.X.X*\\n\\nYou can view the [changed log](https://github.com/angular/angular/blob/master/CHANGELOG.md) which starts from Angular 2.0.0\\n\\n### This brings to another important question . What happened to Angular 3.X.X version and why was it skipped?\\n\\nThis happened due to a slight misalignment with the angular route package . Angular team wanted to sync the angular 2.X.X version with the angular router version 3.X.X at that time. more info can be found [here](http://angularjs.blogspot.fr/2016/12/ok-let-me-explain-its-going-to-be.html#Why_not_version_3_then_62).\\n\\nTLDR of this article.\\n\\n- If you are using version 1.X or earlier then you are a AngularJS developer\\n- If you are using angular 2 or above you are an Angular developer ."},{"id":1508697000000,"title":" Create a separate backend development server using webpack devServer.proxy","author":"Malik","date":"October 23, 2017","content":"## Create a separate backend development server using webpack devServer.proxy\\n\\n![webpack-banner](https://lazydevguy.files.wordpress.com/2017/10/web-pack-9.png?w=1024&h=633&crop=1)\\n\\n*This post assumes that you have a basic knowledge on webpack and javascript.*\\n\\n### Setting up client-end\\nI recently started using vue-webpack-simple-template as a boilerplate to develop a vue application for one of my projects.This template consists of webpack configuration which does the following functionalities.\\n\\n1. Build all the related into one single file called build.js inside /dist director\\n\\n![webpack-1](https://lazydevguy.files.wordpress.com/2017/10/web-pack-5.png)\\n\\n2. Use webpack dev-server to host the front-end of the application in localhost.\\n\\n![https://lazydevguy.files.wordpress.com/2017/10/web-pack-6.png](https://lazydevguy.files.wordpress.com/2017/10/web-pack-6.png)\\n\\nSo this was easy . All i had to do was run the command npm run dev and it will fire up the webpack-dev-server in localhost:8080 so that i can immediately get on with the development.\\n\\n### Setting up the server\\n\\nI created a simple back-end using node , express . I created a server.js file for this purpose . There i wanted to have create a simple api end-point to test whether the back-end works. So this is what i did.\\n\\n![webpack-3](https://lazydevguy.files.wordpress.com/2017/10/web-pack-11.png)\\n\\nCreated a simple back-end api-end point to retrieve list of products from local mongodb collection called products. Note that i am using a different port (3000) for the back-end.\\n\\n![webpack-4](https://lazydevguy.files.wordpress.com/2017/10/web-pack-2.png)\\n\\nand added a npm script to run the server.\\n\\n![webpack-5](https://lazydevguy.files.wordpress.com/2017/10/web-pack-3.png)\\n\\nAnd i executed the command npm run server , and tried accessing the api-end by typing\\n\\n*the url localhost:3000/api/products*\\n\\n![webpack-5](https://lazydevguy.files.wordpress.com/2017/10/web-pack-4.png)\\n\\nOkay everything seems to be working up to this point. Okay what is the problem then...\\n\\n\\n### Problem\\n\\n### Integration front-end to back-end\\n\\nNext i wanted do was integrating the front-end with the simple back-end i have made.\\nSo i wrote a simple $http.get to get results from /api/products in Main.vue file.\\n\\n![webpack-6](https://lazydevguy.files.wordpress.com/2017/10/web-pack-7.png)\\n\\nAnd reloaded the page. But when i checked the console all i got was a 404 error. It says `localhost:8080/api/products/ was not found`.\\n\\nI rechecked the api-end by checking the url localhost:3000/api/products in the browser just to confirm the server runs okay and i got results!\\n\\nOkay what was the problem then?\\n\\n### Different ports\\n\\nAfter putting my mind on this for few minutes i realized what the problem was . And as usual it was a very stupid mistake.\\n\\nMy front-end configured by webpack was running on port 8080 while the simple back-end api i have created using node,express running on port 3000. So when i tried to access the /api/products from the application using $http.get method it was trying to get the resource from following url ..\\n\\n`localhost:8080/api/products`\\n\\nIt is trying to access something which isn\u2019t there , hence the 404 error. A classic dummy dev err.\\n\\n### Solution\\n\\nSo the solution is really simple . When you do developments using webpack and when you come across a scenario where you want to have a separate back-end server you can proxy the back-end api urls to the front-end using a special webpack-dev-server configuration.\\n\\n![webpack-7](https://lazydevguy.files.wordpress.com/2017/10/web-pack-8.png)\\n\\nIt will proxy any request from `localhost:8080/api/` to `localhost:3000/api/`\\n\\nSo for example when i do this in my application `/api/products/`\\n\\nit will access `localhost:3000/api/products` and NOT `localhost:8080/api/products` even though the application is running on port 8080.\\n\\nConclusion\\n\\nWhen i had this problem , i was surprised that i couldn\u2019t find a decent solution specified anywhere with a proper explanation. That is why i decided to write a blog post my personal experience. Hope anyone with a similar issue will find this post useful.\\n\\nYou can find the relevant documentation for webpack devserver proxy [here](https://webpack.js.org/configuration/dev-server/#devserver-proxy)."},{"id":1504722600000,"title":" Spacing oddities in Javascript toString()","author":"Malik","date":"September 7, 2017","content":"## Spacing oddities in Javascript toString()\\n\\nWhen you invoke javascript [toString()](https://www.w3schools.com/jsref/jsref_tostring_number.asp) on a number like below.\\n\\n![to-string](https://lazydevguy.files.wordpress.com/2017/09/space1.png)\\n\\nYou are thrown with an error saying there is a syntax error . But when you do the same with an space between the 123 and .toString(2) ,code executes.\\n\\n![to-string-2](https://lazydevguy.files.wordpress.com/2017/09/space2.png)\\n\\nStrange right ? But nothing is strange when you work with Javascript . What happens here is \u2026\\n\\nIn the first example `123.toString(2)` is being evaluated as `<123.t><oString(2)>` as two different parts. Because \u201c.\u201d is a valid part of a Number in Javascript. So when you execute `123.WhatevertheMethod()` , the interpreter think that whatever comes after the \u201c.\u201d belongs to the number . In this case , it is the letter \u201ct\u201d. Hence the error message.\\n\\n2nd example, since we are using a space, Javascript interpreter now knows that you are invoking toString(2) on \u201c123\u201d literal. So it executes !\\nEven better you can write the same as below.\\n\\nEven better you can write the same as below\\n\\n![to-string-3](https://lazydevguy.files.wordpress.com/2017/09/space3.png)\\n\\nusing a parenthesis on the number , So that the interpreter knows that it is a literal \u201c123\u201d.\\n"},{"id":1503945000000,"title":" Vue.js .Is it worth it to learn yet another javascript library?","author":"Malik","date":"Auguest 29, 2017","content":"## Vue.js .Is it worth it to learn yet another javascript library?\\n\\nThis is a very highlevel take on Vue.js and the reason for its popularity . If you want to go deeper , i suggest you to have look at the [documentation](https://vuejs.org/v2/guide/#What-is-Vue-js) and the [official comparison between Vue.js other modern javascript frameworks/libraries](https://vuejs.org/v2/guide/comparison.html).\\n\\nVue.js (pronounced /vju\u02d0/, like view) is a [lightweight](https://vuejs.org/v2/guide/comparison.html#Size-and-Performance) library which can be used to develop data-reactive web components.It mainly focuses on building the \u201cview\u201d part of a web application.It also provide state management with [vuex](https://github.com/vuejs/vuex).[Version 2 of Vue.js released just over an year ago](https://github.com/vuejs/vue/releases/tag/v2.0.0-alpha.1) , So you could say that it is relatively new when compared with other frameworks such as AngularJS , Angular , React or EmberJS.Vue.Js also contains a mix of some of the features you can find it in both AngularJs and React.But since it is a new library , the user community and the ecosystem of Vue.js are also relatively small , but its popularity growing rapidly as you can see below.\\n\\n![vue-trend](https://lazydevguy.files.wordpress.com/2017/08/vue-trend.png)\\nvue.js google trend in within last 12 months\\n\\n\\nsource : [https://trends.google.com/trends/explore?q=vue.js,react.js,angular.js](https://trends.google.com/trends/explore?q=vue.js,react.js,angular.js)\\n\\nThis brings us to the next question . Why is it so popular ?\\n\\n### It has adapted good features from similar , older javascript libraries.\\n\\nFrom React, it got component-based approach, props, one-way data flow for components hierarchy, performance, virtual rendering ability and focuses on core library instead of bloating with so much of unwanted features .\\nFrom Angular, it got similar templates with good syntax, and two-way data binding when you need it (inside single component)\\n\\n### Easy to setup and use\\n\\nVue.js is extremely easy to setup and use . It all just takes few lines of code to setup to start using it . As someone who worked with AngularJs for the past few years , it was really surprising to see how little code is needed to [configure Vue.js](https://jsfiddle.net/9Lw6yxpp/). Even if you are a person who just entered in to modern javascript development, you can easily start using it by just referring the guidelines of the official documentation.\\n\\n### Lightweight\\nVue.js only focusing on the core functionalities . If you want to add more features you have the freedom to add them as additional dependencies into your project.\\n\\n### Easy documentation and rapidly growing user community\\nVue.js is still at its early stage . But the community is growing due to its simplicity . The official website provides a clear and comprehensive documentation on its API . Stackoverflow has a growing community on Vue.js as well. Vue.js has been starred on github more than 60k times surpassing Angularjs and is only behind React among modern , popular javascript libraries/frameworks.\\n\\n\\n### My experience so far with Vue.js\\nI\u2019ve been developing Single Page Applications for the past 3 years using AngularJs.\\n\\nSome of the issues I\u2019ve faced while using AngularJs such as steeper learning curve , tightly coupled core with unwanted features/plugins and complex configuration were bugging me for a long time.\\n\\nI was never really comfortable with React and never had the chance to switch to React.But when i came across Vue.js right after its 2nd major release , i saw that all of my problems stated above were immediately solved.I loved it because of the simplicity it provides.Recently we have integrated Vue.Js to one of our core projects.My opinion is that if there is a requirement to create data-reactive webcomponants without much configuration , then Vue.js is the answer.\\n\\n\\n### Valuable resources for Vue.js\\n1. [vue-devtools](https://github.com/vuejs/vue-devtools) : This is a tool to debug Vue.js applications . There is a chrome [extension](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en) available under the same. I have written a blog post related to this tool awhile back.\\n2. [Awesome Vue.js](https://github.com/vuejs/awesome-vue) : Long list of various resources for Vue.Js.\\n3. [30 minute video](https://www.youtube.com/watch?v=VPUdtEf3oXI&t=616s) tutorial by dev coffee.\\n4. [An introduction](http://wordpress.redirectingat.com/?id=725X1342&isjs=1&jv=15.2.4-stackpath&sref=https%3A%2F%2Flazydevguy.wordpress.com%2F2017%2F08%2F29%2Fvue-js-is-it-worth-it-to-learn-yet-another-javascript-library%2F&url=https%3A%2F%2Fwww.udemy.com%2Flearn-vue-js-introduction-to-simple-reactive-javascript%2F&xs=1&xtz=-330&xuuid=4b8858e9fdbb54a6e5a9132c179d7aa2&xcust=8982&xjsf=other_click__contextmenu%20%5B2%5D) to Vue.js Udemy course.\\n5. [A sample application](https://coligo.io/real-time-analytics-with-nodejs-socketio-vuejs/) done using Vue.js and Node (Code is provided).\\n6. [Getting started with Vuex](https://scotch.io/tutorials/state-management-in-vue-getting-started-with-vue) :  State management with Vue.js.\\n7. [vue-cli](https://github.com/vuejs/vue-cli) : Simple command line tool for scaffolding Vue.js applications\\n\\n\\n\\n"},{"id":1487183400000,"title":" git \u2013 How to replace your Master","author":"Malik","date":"February 16, 2017","content":"## git \u2013 How to replace your Master.\\n\\nSo in my project we had to face the following situation.\\n\\nWe have 2 main branches in our project repository , master and bug-fixing . bug-fixing was created as a temp branch so that the developers can create feature branches on-top of that. But after a while this temp branch sort of became as our main branch and when we finally decided that we need to update master branch it was too late . Because master branch was behind more than 300 + commits . So i had to find the easiest and safest way to replace old master with new updated commits . And this is how i did it.\\n\\nStep 1 : Get all the updates from the bug-fixing remote branch using a pull\\n\\n\\n![git-pull](https://lazydevguy.files.wordpress.com/2017/02/git-branch-2.png)\\n\\nStep 2 : Checkout master branch and hard reset with bug-fixing branch\\n`git reset \u2013hard bug-fixing`\\n\\n![git-branch](https://lazydevguy.files.wordpress.com/2017/02/git-branch-8.png)\\n\\nStep 3 : Force push your local master to remote origin master.\\n`git push origin master \u2013force`\\n\\n![git-force](https://lazydevguy.files.wordpress.com/2017/02/git-branch-7.png)\\n\\nThat\u2019s it . All under 4 commands , and your master is updated !\\n"},{"id":1485541800000,"title":" An introduction to git","author":"Malik","date":"January 28, 2017","content":"## An introduction to git\\n\\nI did a presentation on git to my team . It covered following topics.\\n\\n\\n- An introduction to git.\\n- Git vs other scm systems.\\n- What is rebasing workflow ?\\n- Good practices in SCM.\\n- A list of most used and important commands in git.\\n\\nView the presentation [here](https://slides.com/salimmalik/deck-1)\\n"},{"id":1483813800000,"title":"Youtube color combination issue ?","author":"Malik","date":"January 8, 2017","content":"\\n## Youtube color combination issue?\\n\\nRecently I noticed something annoying with Youtube\u2019s settings menu.\\n\\n![color-combination](https://lazydevguy.files.wordpress.com/2017/01/youtube-good1.png)\\n\\nThe color combination they\u2019ve used for the toggle switch for Autoplay, Annotations are virtually unidentifiable. Both switch on,off states have been differentiated using a grayish color combination. So for example, you have to really look twice to know whether the  Autoplay is switched on or off.\\n\\n### After adding some contrast to \\"on\\" state in toggle button. Making it bit more intuitive\\n\\n![color-combination](https://lazydevguy.files.wordpress.com/2017/01/youtube-bad1.png)\\n\\nSee now it looks slightly better. A basic rule in UX is that when you want to differentiate two states in UI, you go for complementary color rule.\\n\\nbonus link: [Adobe color wheel](https://color.adobe.com/). Very useful when you want to select color combinations for your UI."},{"id":1483554600000,"title":"Vue is not detected. How to fix vue dev-tools issue?","author":"Malik","date":"January 5, 2017","content":"\\n## Vue is not detected : How to fix vue dev-tools issue ?\\n\\n[Vue dev-tools](https://github.com/vuejs/vue-devtools) is a handy little tool developed by VueJs to make the debugging easier when you develop Vue Applications. Currently there is a [chrome extension available](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd). Also you can install it via yarn or npm as well.\\n\\nBut sometimes you might come across a issue like this when you try to use this tool.\\n\\n![vue-not-detected-1](https://lazydevguy.files.wordpress.com/2017/01/vue-is-not-detected1.png)\\n\\nFollowing are few ways to fix the issue.\\n\\n1. First of all , make sure you are using a non-minified version of VueJS.\\n2. If you are using File:// protocol , By enabling \u201callow access to file URL\u2019s option\u201d in the chrome extension\\n\\n![vue-not-detected-2](https://lazydevguy.files.wordpress.com/2017/01/vue-is-not-detected-chrome-extension.png?w=300&h=145)\\n\\nafter this try closing and reopening the chrome.\\n\\n3. By adding the devtools = true in the app.js file.\\nVue.config.devtools = true\\n\\nMore info [here](https://vuejs.org/v2/api/#devtools)\\n\\n4. If non of the above doesn\u2019t work, try loading your Vue app over a local http-server.\\nHere is a simple http-server. And close and reopen your chrome tab.\\n\\nI was able to resolve this issue by following option 2 and 3.\\n\\n[vue-not-detected-3](https://lazydevguy.files.wordpress.com/2017/01/vue-is-not-detected-solved.png)"},{"id":1483381800000,"title":"When to use git rebasing and why?","author":"Malik","date":"January 3, 2017","content":"\\n## When to use git rebasing and why?\\n\\nNote: My earlier post was [post](http://lazydevguy.blogspot.com/2015/06/useful-git-commands.html) some of the useful commands of git and how to use them\\n\\n#### Git rebase: Introduction\\n\\n[Git rebase](http://git-scm.com/docs/git-rebase) is a handy mechanism when you need merge the changes of your branch with another branch (probably with the master branch) . But the process behind a git-rebase is not that simple as the definition suggests , but it is clean and awesome. In this post, I am going to go through with the process behind a git rebase, when to use it, and when to avoid it.\\n\\nLet\u2019s look at the following simple scenario..\\n\\nSay you are creating a development-branch out of this master branch to do your development stuff.\\n\\n![git-rebase-intro](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-1.png)\\n\\nAnd you are now working on this development-branch for sometime. You make changes, you add these changes and you commit those changes to this branch. Now after few days, you decides that it is the right time to integrate your changes to the master branch . But guess what, your team members have already pushed their changes to the master branch. So you cannot just easily merge your changes to the master without messing up the changes of your peers. Following diagram illustrates the situation\\n\\n![git-rebase-intro2](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-4.png)\\n\\nAs you can see there is a gap between the branch you are working on and the master. This is where the it rebase comes in .By using git rebase you are going to integrate your changes (commit B1, B2) with the master (Where now the head is located at commit M3),\\n\\n![git-rebase-intro3](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-2.png)\\n\\nNow the situation changes to something like below\\n\\n![git-rebase-intro3](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-3.png)\\n\\nWhen you use git rebase , the commit history (commit hashes) changes entirely . That is why i have used the green color to represent the history instead of blue (color of master\u2019s commits) or red (color of development-branch commits).\\n\\n#### Advantage\\n\\nIt creates a **Linear History** which is the very reason why we need to use git rebasing. Your history is clean flat and readable. You can identify the commits of each of your team members very easily in different timelines.\\n\\n#### Disadvantage\\n\\nIn a situation where you have so many people consistently pushing their changes to master and when there are so many branches being merged with the master, It is kind of a pain in the a** to keep your branch upto date with master using git rebase. You have to constantly do the rebasing, and might need to resolve conflicts time to time.\\n\\nAlso rewriting your commit history after each and every reabsing is not always a good thing. It means that your commit hashes change consistently and also, you need to **force push** every time to the remote after a rebase\\n\\n#### When to rebase:\\nOnly when you need a clean linear history so that you can clearly see what is going on with the all the commits from all the team members.\\n\\n#### When not to rebase:\\nIf you prefer to follow a simple mechanism where you can integrate your changes with the upstream branch without a fuss you can always go with [git merge](https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging#_basic_merging)."},{"id":1483036200000,"title":"How to face software engineering internship interviews?","author":"Malik","date":"December 30, 2016","content":"\\n## How to face software engineering internship interviews ?\\n\\nI got the opportunity to do few interviews and mock interviews for the interns who were trying to get into the Industry as trainees. What i have noticed from the candidates are that they are extremely skillful, had good academic track records and some of them are very good at problem solving. However what i didn\u2019t see was the preparation to face an interview. When the most common questions were asked, i saw the lack of ability to tackle those questions mainly due to the absence of preparation. So i thought of writing few tips on how to tackle an internship interview.\\n\\n### How to face it better ?\\n\\n#### First things first :\\nYou should prepare a small \u201cabout-yourself \u201d description to introduce yourself to the interviewer . Because the first question would almost always be something like \u201cCan you first tell us about yourself a bit\u201d . This is something everyone easily messes-up  because it is so obvious!\\n\\n#### Stick to the script :\\nWhen you introduce yourself to the interviewers, make sure to keep it short and sweet. It should be relevant to the internship. For example after stating the basic information (name, age, where you live), go with your overall academic records, projects you have done, any important contributions you have done to the IT community (such as open-source contributions, tech publications), any interesting hobbies and a bit about why you selected this field. You might not want to share your pet\u2019s name, what your parents doing for a living.\\n\\n#### Bring a copied CV:\\nIf the interview is onsite, this is important and is something always expected from a interviewee.\\n\\n#### Loud and clear:\\nSome people are naturally soft spoken. But when it comes to interviews you need to make sure what you are saying is delivered to the interviewer. If the interviewer had to ask you again and again for something, it will create a negative impression. It will also show you that you are not in cable of having a efficient communication.\\n\\n#### Confidence and eye-contact:\\nDon\u2019t bore your interviewer by acting slow and dull. Show your enthusiasm in your voice and always keep a good eye contact. Attitude matters!\\n\\n#### Be honest:\\nWhen you are asked about something about your self, make  sure you give the correct details. If you are not being honest at that time and if the interviewer later found out that you gave out incorrect details, you are done.\\n\\n#### About your projects:\\nAlways have a look at the overall information about your university projects and you need to prepare for this before coming to the interview. There will be a question like \u201cTell us about your university projects\u201d, So in that case it is important that you know how to explain what you have done . You might have done several projects, in that case, select one. 3 things need to be said during this question.\\n\\n1. Project description (domain, techs used, overall system architecture)\\n2. What is your contribution\\n3. Problems faced and the assumptions made\\n\\n#### Think out loud:\\nYou will be given some kind of problem/scenario where you are required to provide a solution. The solution might be some pseudocode/algorithm or some high-level system design. Sometimes what happens is that you think about a solution in your head without expressing it, Which will result in a uncomfortable silence between you and the interviewer. In this case a pen and paper might come in handy. You can sketch it and show as to how you will approach the issue. So the interviewer will know you got the idea.\\n\\n#### Keeping your self updated:\\nWhen it comes to IT field, It is imperative that you know a bit about the latest techs and trends. So always keep your knowledge polished by readings blogs, magazines etc. Also having a basic knowledge about the company is a must. Go through the company\u2019s website, Facebook page, LinkedIn or another SM accounts and get an overall idea as a part of the preparation for the interview.\\n\\n#### Social media profile:\\nHaving a LinkedIn profile is a good way of marketing your self for a job. Remember to include this in your CV. Also if you managed a blog, if you have a stackoverflow or a github account , share it with your interviewer. This will help him to understand your skills better.\\n\\n#### Passion and Mission:\\nAnother obvious question is \u201cHow do you see yourself in n number of years\u201d. Always prepare for this question before the interview. Also your plans should be relevant to the internship and the field.\\n\\n#### Ask questions:\\nWhen you are asked a question such as \u201d Do you have any questions to be asked from us ? \u201d. Keep at least two questions prepared to ask at this point which also needs to be relevant to the context.\\nFor Example :\\n\\n1. What are the new projects are being developed by your company ?\\n2. How this place will help me to improve my career path ?\\n3. If i get selected , what projects would be assigned to me ? what kind of part would i play in the company/project ?\\n\\n"},{"id":1482949800000,"title":"How to merge your silly little commits into one","author":"Malik","date":"December 29, 2016","content":"## Git : How to merge your silly little commits into one\\n\\nThere are three kinds of git users. People who commits every single change ; People who wait and compile all the changes into one gigantic commit. And the last kind is the best kind, who commits in a responsible way. I used to be the first kind, but realized later it is annoying to the people who reviews my PR\u2019s. So here is the thing, git has 2 helpful ways of dealing with this problem.\\n\\n1. git squash\\n2. git reset\\n\\nHere is the scenario. Say if you made some commits with small changes like remove small space 1, change variable name, remove space 2. Later you realize the commits are kind of silly, you want all these commits to be merge into one called something like code cleanup.\\n\\nUsing squash for this problem a bit complex (not if you get used to it). But it sort of gives you an overall idea on what is happening. This is how you do it.\\n\\n## Method 1: Using squash\\n\\nFirst of all make sure your master branch is up-to date with the related upstream branch. And say you are in a feature branch called, well feature-branch.\\n\\nin your git bash, run this command `git rebase -i master`\\n\\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-1.png)\\n\\nyou will get the vim interactive console and you will see all of your 3 commits listed.\\n\\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-2.png)\\n\\nHere the process is simple. You can pick one commit which can be your parent commit  using pick, and the rest of the commits can be linked under this parent commit using squash command. Also you can change the order of the commits as well. So according to our scenario, we can follow this way.\\n\\nAnd that is it. Just save and exit. And you will get another interactive console like below.\\n\\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-5.png)\\n\\nAnd you have successfully merge 3 of your commits into one commit which is going to make a better commit history for you. Now you can just run `git push origin feature-branch \u2013force` to push your single commit to the remote repository.\\n\\nNote: we are using `\u2013force` because this process has changed the commit hashes. In any case, when you use force push, you need to absolutely make sure you know what you are doing.\\n\\nIf you view the commit history, you can see the squashed commits like this visualized in a different way.\\n\\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-6.png)\\n\\nSo that\u2019s how you squash your commits in Git. It is a bit time consuming process, but if you get used to it, it is very useful\\n\\n\\n## Method 2: Using `git reset`\\n\\nSo unlike squashing your commits, you can easily merge your little commits into one using git reset command. It is really simple. Take the same scenario i have mentioned above. Now what you need is, Taking the HEAD position 3 commits back. By doing this you are resetting the last 3 commits.\\n\\n```\\ngit reset \u2013soft HEAD~3\\n```\\n\\nNow you have un-stage changes. All you need to do now is to put them into a single commit.\\n\\n```\\ngit commit -m \u201cCode cleanup\u201d\\n```\\n\\nOr do these both together\\n\\n```\\ngit reset \u2013soft HEAD~3 && git commit -m \u201cCode cleanup\u201d\\n```\\n\\nNow push `\u2013force` to push the new commit into the remote repository. The same warning regarding force push applies here as well.\\n\\nmore info on squashing can be found [here](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History)"},{"id":1454783400000,"title":"Resolve NPM install \\"unmet dependency\\" warning","author":"Malik","date":"February 7, 2016","content":"## Resolve NPM install `unmet dependency` warning\\n\\nSometimes when you try to install node modules, npm prompts the following warning message:\\n\\n![npm dependency issue](https://lazydevguy.files.wordpress.com/2016/02/capture.png)\\n\\n> npm WARN unmet dependency undefined,\\nnpm WARN unmet dependency which is version undefined\\n\\nBecause of this some of the node modules might not get installed correctly. There are couple of main reasons why this could happen.\\n\\n1. You might be using a older version of NPM.\\nSolution : Check your NPM version and make sure it is upto date . If not try updating your NPM application globally.\\n\\n2. Network interruptions while downloading dependencies or NPM cache problems Solution:  `rm -rf` the local node_modules folder and run `npm cache clean`. This should enable you to run a clean `npm install`. again."},{"id":1435170600000,"title":"Git rebase merge conflict resolving. Did you forget to use add?","author":"Malik","date":"June 25, 2015","content":"\\n## Git rebase merge conflict resolving. Did you forget to use add?\\n\\nSometimes when you rebase your branch with the master branch and after fixing a merge conflict you might encounter following issue\\n\\n### The loopy problem of git rebasing\\n\\n```\\n$ git rebase \u2013continue\\nApplying: loglevel equal to silent\\nNo changes \u2013 did you forget to use \u2018git add\u2019?\\n```\\n\\nIf there is nothing left to stage, chances are that something else. already introduced the same changes; you might want to skip this patch.\\n\\nWhen you have resolved this problem, run `git rebase \u2013continue`. If you prefer to skip this patch, run `git rebase \u2013skip` instead.\\nTo check out the original branch and stop rebasing, run `git rebase \u2013abort`.\\n\\n![git-rebase-loop](https://lazydevguy.files.wordpress.com/2015/06/git2.png)\\n\\nBut the problem you might having is that you have already added the file using git add `yourconfilctedfilename`  And might have added several times but still Git telling you to add the file again??\\n\\n### The loopy problem of git rebasing\\nI have encountered this issue couple of times and it turns out is a [git bug](https://github.com/git/git/commit/95104c7e257652b82aed089494def344e3938928) which was later fixed with Git 2.0.2 version. So anyway in this case rather than updating your git application, you can simply do the git rebase \u2013skip and just skip the patch. It will not do any harm because the patch was empty anyway."},{"id":1435084200000,"title":"How to set Visual Studio Version With NPM","author":"Malik","date":"June 24, 2015","content":"## How to set Visual Studio Version With NPM\\n\\nWhen you install NPM modules in windows environment  , some times you might ran into an error like below.\\n\\n> C:\\\\Program Files (x86)\\\\MSBuild\\\\Microsoft.Cpp\\\\v4.0\\\\V120\\\\Microsoft.Cpp.Platform.targets(64,5): error MSB8020: The build tools for Visual Studio 2010 (Platform Toolset = \u2018v100\u2019) cannot be found. To build using the v100 build tools, please install Visual Studio 2010 build tools. Alternatively, you may upgrade to the current Visual Studio tools by selecting the Project menu or right-click the solution, and then selecting \u201cUpgrade Solution\u2026\u201d. [C:\\\\Users\\\\Documents\\\\FLIS.Client.Tests\\\\node_modules\\\\karma\\\\node_modules\\\\socket.io\\\\node_modules\\\\socket.io-client\\\\node_modules\\\\ws\\\\build\\\\bufferutil.vcxproj]\\n\\nAs you can see the error says that it cannot find the Visual studio 2010 platform toolset. In this case you can externally specify build platform toolset to NPM like this.\\n\\n```\\n\u2013msvs-version=2013 // I am running visual studio 2013 . So\u2026\\n```\\n\\nFor E.g If you want to install protractor with `\u2013msvs-version=2013`\\n\\n```\\nnpm install protractor \u2013msvs-version=2013\\n```"},{"id":1422988200000,"title":"Difference between $scope and $rootscope","author":"Malik","date":"February 4, 2015","content":"\\n## Difference between \\\\$scope and \\\\$rootscope\\n\\nWhenever you declare a controller in angular , you automatically create a `$scope` which is relevant to that controller.\\n\\n### So what does a \\\\$scope mean\\n\\nfrom documentation\\n> `$scope` is an object that refers to the application model. It is an execution context for expressions. `$scopes` are arranged in hierarchical structure which mimic the DOM structure of the application. `$scope` can watch expressions and propagate events.\u201d .\\n\\nIn simpler terms it means that it is a way of tying an object to the DOM . If you consider the MVC model in Angular , the scope acts as a model . It is a template which hosts all the functions and the related data . Okay now that we have gotten some insight into the `$scope`.\\n\\nNow let talk about `$rootscope`.\\n\\n`$rootscope` is the parent (more like a root parent) of all the `$scopes` you create . It is the ultimate boss . It is (almost) like the Object class of Java .It is the top most `$scope` of your app and it contains ng-app directive . There is only one `$rootscope` for each of the Angular application .\\n\\n![ difference ](https://lazydevguy.files.wordpress.com/2015/02/blog.png)"}]')},31:function(e,t,n){},57:function(e,t,n){},58:function(e,t,n){},60:function(e,t,n){"use strict";n.r(t);var o=n(1),a=n.n(o),i=n(32),s=n.n(i),r=n(10),l=n(39),c=n(13),u=n(4),h=n(6),d=n(14),m=n(11),p=n(12),g=n(0),w=function(e){Object(m.a)(n,e);var t=Object(p.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(d.a)(n,[{key:"render",value:function(){return Object(g.jsx)("span",{className:"about-container",children:Object(g.jsxs)("ul",{children:[Object(g.jsxs)("li",{children:[Object(g.jsx)("span",{className:"link-icon",children:Object(g.jsx)("ion-icon",{name:"logo-github"})}),Object(g.jsx)("a",{href:"https://github.com/mal90",children:" Github "})]}),Object(g.jsxs)("li",{children:[Object(g.jsx)("span",{className:"link-icon",children:Object(g.jsx)("ion-icon",{name:"logo-stackoverflow"})}),Object(g.jsx)("a",{href:"https://stackoverflow.com/users/1305026/malik",children:" Stack overflow "})]}),Object(g.jsxs)("li",{children:[Object(g.jsx)("span",{className:"link-icon",children:Object(g.jsx)("ion-icon",{name:"logo-linkedin"})}),Object(g.jsx)("a",{href:"https://www.linkedin.com/in/maliksalim/",children:" LinkedIn "})]}),Object(g.jsxs)("li",{children:[Object(g.jsx)("span",{className:"link-icon",children:Object(g.jsx)("ion-icon",{name:"logo-instagram"})}),Object(g.jsx)("a",{href:"https://www.instagram.com/madkmalik/",children:" Instagram "})]})]})})}}]),n}(a.a.Component),y=n(22),f=function(e){return Object(g.jsxs)("div",{className:"blog-container",children:[Object(g.jsx)("h3",{className:"main-title",children:"All Posts"}),Object(g.jsx)("ul",{children:y.length&&y.map((function(e,t){return Object(g.jsx)(r.b,{className:"links",to:"/post/".concat(e.id),children:Object(g.jsxs)("li",{className:"post-item",children:[Object(g.jsxs)("span",{class:"post-title",children:[Object(g.jsx)("ion-icon",{name:"newspaper-outline"}),Object(g.jsx)("h4",{children:e.title})]}),Object(g.jsxs)("span",{class:"date",children:[Object(g.jsx)("ion-icon",{name:"calendar-number-outline"}),Object(g.jsxs)("small",{children:["Published on ",e.date]})]})]})},e.id)}))})]})},b=(n(31),function(e){Object(m.a)(n,e);var t=Object(p.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(d.a)(n,[{key:"render",value:function(){return Object(g.jsxs)("span",{className:"home-container",children:[Object(g.jsx)("h1",{children:" Hello, i am a Frontend developer from Sri Lanka"}),Object(g.jsxs)(r.b,{className:"about",to:"about",children:["\ud83d\udc4b  \xa0 Get to know me",Object(g.jsx)("span",{className:"about-icon",children:Object(g.jsx)("ion-icon",{name:"arrow-forward-outline"})})]})]})}}]),n}(a.a.Component)),v=n(38),k=function(e){var t=parseInt(e.match.params.id);if(t){var n={};return y.forEach((function(e,o){t===e.id&&(n.title=e.title?e.title:"No title given",n.date=e.date?e.date:"No date given",n.author=e.author?e.author:"No author given",n.content=e.content?e.content:"No content given")})),Object(g.jsxs)("div",{className:"post-container",children:[Object(g.jsxs)(r.b,{className:"go-back",to:"/blog",children:[Object(g.jsx)("span",{className:"arrow-back-outline",children:Object(g.jsx)("ion-icon",{name:"arrow-back-outline"})}),"back to all posts"]}),Object(g.jsxs)("small",{children:["Published on ",n.date," by ",n.author]}),Object(g.jsx)("hr",{}),Object(g.jsx)("div",{className:"markdown-body",children:Object(g.jsx)(v.a,{children:n.content})})]})}},j=function(){return Object(g.jsx)("span",{className:"landing-page",children:Object(g.jsxs)(u.c,{children:[Object(g.jsx)(u.a,{exact:!0,path:"/",children:Object(g.jsx)(b,{})}),Object(g.jsx)(u.a,{exact:!0,path:"/about",children:Object(g.jsx)(w,{})}),Object(g.jsx)(u.a,{exact:!0,path:"/blog",children:Object(g.jsx)(f,{})}),Object(g.jsx)(u.a,{exact:!0,path:"/post/:id",render:function(e){return Object(g.jsx)(k,Object(c.a)({},e))}})]})})},A=function(e){Object(m.a)(n,e);var t=Object(p.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(d.a)(n,[{key:"render",value:function(){return Object(g.jsx)("li",{className:"menu-item",children:Object(g.jsx)(r.b,{to:this.props.redirect,children:this.props.name})})}}]),n}(a.a.Component),I=(n(57),n.p+"static/media/dp.bdeb0b0e.jpg"),x=function(e){var t=e.toggleMenu,n=e.setToggleMenu;return Object(g.jsxs)("div",{className:"side-menu ".concat(t?"show":"hide"),children:[Object(g.jsx)("img",{src:I,alt:"Logo"}),Object(g.jsxs)("ul",{className:"menu-container",onClick:function(){return function(e){e(!1)}(n)},children:[Object(g.jsx)(A,{redirect:"/",name:"Home"}),Object(g.jsx)(A,{redirect:"/about",name:"About"}),Object(g.jsx)(A,{redirect:"/blog",name:"Blog"})]})]})},S=function(e){return Object(g.jsx)("small",{className:"footer",children:"\xa9 Copyright 2021 Malik"})},O=function(){var e=Object(o.useState)(!1),t=Object(l.a)(e,2),n=t[0],a=t[1];return Object(g.jsxs)("span",{className:"app",children:[Object(g.jsx)("div",{className:"burger-btn",onClick:function(){a(!n)},children:n?Object(g.jsx)("ion-icon",{size:"large",name:"close-outline",className:"close-btn"}):Object(g.jsxs)("span",{children:[Object(g.jsx)("span",{className:"burger-line"}),Object(g.jsx)("span",{className:"burger-line"}),Object(g.jsx)("span",{className:"burger-line"})]})}),Object(g.jsx)(x,{toggleMenu:n,setToggleMenu:a}),Object(g.jsxs)("span",{className:"landing-page-container",children:[Object(g.jsx)(j,{}),Object(g.jsx)(S,{})]})]})};n(58),n(59);s.a.render(Object(g.jsx)(a.a.StrictMode,{children:Object(g.jsx)(r.a,{children:Object(g.jsx)(O,{})})}),document.getElementById("root"))}},[[60,1,2]]]);
//# sourceMappingURL=main.0f1cb9e3.chunk.js.map