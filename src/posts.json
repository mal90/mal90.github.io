[{"id":1514658600000,"title":" AngularJS, Angular 2, Angular 4, Angular 5 naming confusion","author":"Malik","date":"December 31, 2017","content":"## AngularJS, Angular 2, Angular 4, Angular 5 naming confusion\n\nI have seen even experienced front end developers doing the mistake of using incorrect terms for the angular(js) version they are using.\n\nThis simple blog post is trying to address this issue.\n\n### AngularJS 1.X\n\nAnything which comes under AngularJS 1.X  can be called as AngularJS or Angular . JS\n\n### Angular 2.X.X\n\n--------------------------\n\n### Following statement is wrong!\n\nI am using AngularJS 2.\n\n--------------------------\n\nIf you are using Angular 2.X.X or higher version then your application using Angular platform. Depending the version it can be Angular 2 , Angular 4 or Angular 5.\n\nExample :\n\nAngular 2.X.X is angular 2\nAngular 4.X.X is angular 4\n\nAngular 2 is complete paradigm shift from original AngularJS platform .  Another important point is Angular 2 is not backward compatible with AngularJS .\n\nSince angular 2.X.X on wards they have started using semantic versioning . Which means Major version number will be changed for any breaking changes to the core of the library.\n\n*After 2.X.X , next released version of Angular was 4.X.X and current version is Angular 5.X.X*\n\nYou can view the [changed log](https://github.com/angular/angular/blob/master/CHANGELOG.md) which starts from Angular 2.0.0\n\n### This brings to another important question . What happened to Angular 3.X.X version and why was it skipped?\n\nThis happened due to a slight misalignment with the angular route package . Angular team wanted to sync the angular 2.X.X version with the angular router version 3.X.X at that time. more info can be found [here](http://angularjs.blogspot.fr/2016/12/ok-let-me-explain-its-going-to-be.html#Why_not_version_3_then_62).\n\nTLDR of this article.\n\n- If you are using version 1.X or earlier then you are a AngularJS developer\n- If you are using angular 2 or above you are an Angular developer ."},{"id":1508697000000,"title":" Create a separate backend development server using webpack devServer.proxy","author":"Malik","date":"October 23, 2017","content":"## Create a separate backend development server using webpack devServer.proxy\n\n![webpack-banner](https://lazydevguy.files.wordpress.com/2017/10/web-pack-9.png?w=1024&h=633&crop=1)\n\n*This post assumes that you have a basic knowledge on webpack and javascript.*\n\n### Setting up client-end\nI recently started using vue-webpack-simple-template as a boilerplate to develop a vue application for one of my projects.This template consists of webpack configuration which does the following functionalities.\n\n1. Build all the related into one single file called build.js inside /dist director\n\n![webpack-1](https://lazydevguy.files.wordpress.com/2017/10/web-pack-5.png)\n\n2. Use webpack dev-server to host the front-end of the application in localhost.\n\n![https://lazydevguy.files.wordpress.com/2017/10/web-pack-6.png](https://lazydevguy.files.wordpress.com/2017/10/web-pack-6.png)\n\nSo this was easy . All i had to do was run the command npm run dev and it will fire up the webpack-dev-server in localhost:8080 so that i can immediately get on with the development.\n\n### Setting up the server\n\nI created a simple back-end using node , express . I created a server.js file for this purpose . There i wanted to have create a simple api end-point to test whether the back-end works. So this is what i did.\n\n![webpack-3](https://lazydevguy.files.wordpress.com/2017/10/web-pack-11.png)\n\nCreated a simple back-end api-end point to retrieve list of products from local mongodb collection called products. Note that i am using a different port (3000) for the back-end.\n\n![webpack-4](https://lazydevguy.files.wordpress.com/2017/10/web-pack-2.png)\n\nand added a npm script to run the server.\n\n![webpack-5](https://lazydevguy.files.wordpress.com/2017/10/web-pack-3.png)\n\nAnd i executed the command npm run server , and tried accessing the api-end by typing\n\n*the url localhost:3000/api/products*\n\n![webpack-5](https://lazydevguy.files.wordpress.com/2017/10/web-pack-4.png)\n\nOkay everything seems to be working up to this point. Okay what is the problem then...\n\n\n### Problem\n\n### Integration front-end to back-end\n\nNext i wanted do was integrating the front-end with the simple back-end i have made.\nSo i wrote a simple $http.get to get results from /api/products in Main.vue file.\n\n![webpack-6](https://lazydevguy.files.wordpress.com/2017/10/web-pack-7.png)\n\nAnd reloaded the page. But when i checked the console all i got was a 404 error. It says `localhost:8080/api/products/ was not found`.\n\nI rechecked the api-end by checking the url localhost:3000/api/products in the browser just to confirm the server runs okay and i got results!\n\nOkay what was the problem then?\n\n### Different ports\n\nAfter putting my mind on this for few minutes i realized what the problem was . And as usual it was a very stupid mistake.\n\nMy front-end configured by webpack was running on port 8080 while the simple back-end api i have created using node,express running on port 3000. So when i tried to access the /api/products from the application using $http.get method it was trying to get the resource from following url ..\n\n`localhost:8080/api/products`\n\nIt is trying to access something which isn’t there , hence the 404 error. A classic dummy dev err.\n\n### Solution\n\nSo the solution is really simple . When you do developments using webpack and when you come across a scenario where you want to have a separate back-end server you can proxy the back-end api urls to the front-end using a special webpack-dev-server configuration.\n\n![webpack-7](https://lazydevguy.files.wordpress.com/2017/10/web-pack-8.png)\n\nIt will proxy any request from `localhost:8080/api/` to `localhost:3000/api/`\n\nSo for example when i do this in my application `/api/products/`\n\nit will access `localhost:3000/api/products` and NOT `localhost:8080/api/products` even though the application is running on port 8080.\n\nConclusion\n\nWhen i had this problem , i was surprised that i couldn’t find a decent solution specified anywhere with a proper explanation. That is why i decided to write a blog post my personal experience. Hope anyone with a similar issue will find this post useful.\n\nYou can find the relevant documentation for webpack devserver proxy [here](https://webpack.js.org/configuration/dev-server/#devserver-proxy)."},{"id":1504722600000,"title":" Spacing oddities in Javascript toString()","author":"Malik","date":"September 7, 2017","content":"## Spacing oddities in Javascript toString()\n\nWhen you invoke javascript [toString()](https://www.w3schools.com/jsref/jsref_tostring_number.asp) on a number like below.\n\n![to-string](https://lazydevguy.files.wordpress.com/2017/09/space1.png)\n\nYou are thrown with an error saying there is a syntax error . But when you do the same with an space between the 123 and .toString(2) ,code executes.\n\n![to-string-2](https://lazydevguy.files.wordpress.com/2017/09/space2.png)\n\nStrange right ? But nothing is strange when you work with Javascript . What happens here is …\n\nIn the first example `123.toString(2)` is being evaluated as `<123.t><oString(2)>` as two different parts. Because “.” is a valid part of a Number in Javascript. So when you execute `123.WhatevertheMethod()` , the interpreter think that whatever comes after the “.” belongs to the number . In this case , it is the letter “t”. Hence the error message.\n\n2nd example, since we are using a space, Javascript interpreter now knows that you are invoking toString(2) on “123” literal. So it executes !\nEven better you can write the same as below.\n\nEven better you can write the same as below\n\n![to-string-3](https://lazydevguy.files.wordpress.com/2017/09/space3.png)\n\nusing a parenthesis on the number , So that the interpreter knows that it is a literal “123”.\n"},{"id":1503945000000,"title":" Vue.js .Is it worth it to learn yet another javascript library?","author":"Malik","date":"Auguest 29, 2017","content":"## Vue.js .Is it worth it to learn yet another javascript library?\n\nThis is a very highlevel take on Vue.js and the reason for its popularity . If you want to go deeper , i suggest you to have look at the [documentation](https://vuejs.org/v2/guide/#What-is-Vue-js) and the [official comparison between Vue.js other modern javascript frameworks/libraries](https://vuejs.org/v2/guide/comparison.html).\n\nVue.js (pronounced /vjuː/, like view) is a [lightweight](https://vuejs.org/v2/guide/comparison.html#Size-and-Performance) library which can be used to develop data-reactive web components.It mainly focuses on building the “view” part of a web application.It also provide state management with [vuex](https://github.com/vuejs/vuex).[Version 2 of Vue.js released just over an year ago](https://github.com/vuejs/vue/releases/tag/v2.0.0-alpha.1) , So you could say that it is relatively new when compared with other frameworks such as AngularJS , Angular , React or EmberJS.Vue.Js also contains a mix of some of the features you can find it in both AngularJs and React.But since it is a new library , the user community and the ecosystem of Vue.js are also relatively small , but its popularity growing rapidly as you can see below.\n\n![vue-trend](https://lazydevguy.files.wordpress.com/2017/08/vue-trend.png)\nvue.js google trend in within last 12 months\n\n\nsource : [https://trends.google.com/trends/explore?q=vue.js,react.js,angular.js](https://trends.google.com/trends/explore?q=vue.js,react.js,angular.js)\n\nThis brings us to the next question . Why is it so popular ?\n\n### It has adapted good features from similar , older javascript libraries.\n\nFrom React, it got component-based approach, props, one-way data flow for components hierarchy, performance, virtual rendering ability and focuses on core library instead of bloating with so much of unwanted features .\nFrom Angular, it got similar templates with good syntax, and two-way data binding when you need it (inside single component)\n\n### Easy to setup and use\n\nVue.js is extremely easy to setup and use . It all just takes few lines of code to setup to start using it . As someone who worked with AngularJs for the past few years , it was really surprising to see how little code is needed to [configure Vue.js](https://jsfiddle.net/9Lw6yxpp/). Even if you are a person who just entered in to modern javascript development, you can easily start using it by just referring the guidelines of the official documentation.\n\n### Lightweight\nVue.js only focusing on the core functionalities . If you want to add more features you have the freedom to add them as additional dependencies into your project.\n\n### Easy documentation and rapidly growing user community\nVue.js is still at its early stage . But the community is growing due to its simplicity . The official website provides a clear and comprehensive documentation on its API . Stackoverflow has a growing community on Vue.js as well. Vue.js has been starred on github more than 60k times surpassing Angularjs and is only behind React among modern , popular javascript libraries/frameworks.\n\n\n### My experience so far with Vue.js\nI’ve been developing Single Page Applications for the past 3 years using AngularJs.\n\nSome of the issues I’ve faced while using AngularJs such as steeper learning curve , tightly coupled core with unwanted features/plugins and complex configuration were bugging me for a long time.\n\nI was never really comfortable with React and never had the chance to switch to React.But when i came across Vue.js right after its 2nd major release , i saw that all of my problems stated above were immediately solved.I loved it because of the simplicity it provides.Recently we have integrated Vue.Js to one of our core projects.My opinion is that if there is a requirement to create data-reactive webcomponants without much configuration , then Vue.js is the answer.\n\n\n### Valuable resources for Vue.js\n1. [vue-devtools](https://github.com/vuejs/vue-devtools) : This is a tool to debug Vue.js applications . There is a chrome [extension](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en) available under the same. I have written a blog post related to this tool awhile back.\n2. [Awesome Vue.js](https://github.com/vuejs/awesome-vue) : Long list of various resources for Vue.Js.\n3. [30 minute video](https://www.youtube.com/watch?v=VPUdtEf3oXI&t=616s) tutorial by dev coffee.\n4. [An introduction](http://wordpress.redirectingat.com/?id=725X1342&isjs=1&jv=15.2.4-stackpath&sref=https%3A%2F%2Flazydevguy.wordpress.com%2F2017%2F08%2F29%2Fvue-js-is-it-worth-it-to-learn-yet-another-javascript-library%2F&url=https%3A%2F%2Fwww.udemy.com%2Flearn-vue-js-introduction-to-simple-reactive-javascript%2F&xs=1&xtz=-330&xuuid=4b8858e9fdbb54a6e5a9132c179d7aa2&xcust=8982&xjsf=other_click__contextmenu%20%5B2%5D) to Vue.js Udemy course.\n5. [A sample application](https://coligo.io/real-time-analytics-with-nodejs-socketio-vuejs/) done using Vue.js and Node (Code is provided).\n6. [Getting started with Vuex](https://scotch.io/tutorials/state-management-in-vue-getting-started-with-vue) :  State management with Vue.js.\n7. [vue-cli](https://github.com/vuejs/vue-cli) : Simple command line tool for scaffolding Vue.js applications\n\n\n\n"},{"id":1487183400000,"title":" git – How to replace your Master","author":"Malik","date":"February 16, 2017","content":"## git – How to replace your Master.\n\nSo in my project we had to face the following situation.\n\nWe have 2 main branches in our project repository , master and bug-fixing . bug-fixing was created as a temp branch so that the developers can create feature branches on-top of that. But after a while this temp branch sort of became as our main branch and when we finally decided that we need to update master branch it was too late . Because master branch was behind more than 300 + commits . So i had to find the easiest and safest way to replace old master with new updated commits . And this is how i did it.\n\nStep 1 : Get all the updates from the bug-fixing remote branch using a pull\n\n\n![git-pull](https://lazydevguy.files.wordpress.com/2017/02/git-branch-2.png)\n\nStep 2 : Checkout master branch and hard reset with bug-fixing branch\n`git reset –hard bug-fixing`\n\n![git-branch](https://lazydevguy.files.wordpress.com/2017/02/git-branch-8.png)\n\nStep 3 : Force push your local master to remote origin master.\n`git push origin master –force`\n\n![git-force](https://lazydevguy.files.wordpress.com/2017/02/git-branch-7.png)\n\nThat’s it . All under 4 commands , and your master is updated !\n"},{"id":1485541800000,"title":" An introduction to git","author":"Malik","date":"January 28, 2017","content":"## An introduction to git\n\nI did a presentation on git to my team . It covered following topics.\n\n\n- An introduction to git.\n- Git vs other scm systems.\n- What is rebasing workflow ?\n- Good practices in SCM.\n- A list of most used and important commands in git.\n\nView the presentation [here](https://slides.com/salimmalik/deck-1)\n"},{"id":1483813800000,"title":"Youtube color combination issue ?","author":"Malik","date":"January 8, 2017","content":"\n## Youtube color combination issue?\n\nRecently I noticed something annoying with Youtube’s settings menu.\n\n![color-combination](https://lazydevguy.files.wordpress.com/2017/01/youtube-good1.png)\n\nThe color combination they’ve used for the toggle switch for Autoplay, Annotations are virtually unidentifiable. Both switch on,off states have been differentiated using a grayish color combination. So for example, you have to really look twice to know whether the  Autoplay is switched on or off.\n\n### After adding some contrast to \"on\" state in toggle button. Making it bit more intuitive\n\n![color-combination](https://lazydevguy.files.wordpress.com/2017/01/youtube-bad1.png)\n\nSee now it looks slightly better. A basic rule in UX is that when you want to differentiate two states in UI, you go for complementary color rule.\n\nbonus link: [Adobe color wheel](https://color.adobe.com/). Very useful when you want to select color combinations for your UI."},{"id":1483554600000,"title":"Vue is not detected. How to fix vue dev-tools issue?","author":"Malik","date":"January 5, 2017","content":"\n## Vue is not detected : How to fix vue dev-tools issue ?\n\n[Vue dev-tools](https://github.com/vuejs/vue-devtools) is a handy little tool developed by VueJs to make the debugging easier when you develop Vue Applications. Currently there is a [chrome extension available](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd). Also you can install it via yarn or npm as well.\n\nBut sometimes you might come across a issue like this when you try to use this tool.\n\n![vue-not-detected-1](https://lazydevguy.files.wordpress.com/2017/01/vue-is-not-detected1.png)\n\nFollowing are few ways to fix the issue.\n\n1. First of all , make sure you are using a non-minified version of VueJS.\n2. If you are using File:// protocol , By enabling “allow access to file URL’s option” in the chrome extension\n\n![vue-not-detected-2](https://lazydevguy.files.wordpress.com/2017/01/vue-is-not-detected-chrome-extension.png?w=300&h=145)\n\nafter this try closing and reopening the chrome.\n\n3. By adding the devtools = true in the app.js file.\nVue.config.devtools = true\n\nMore info [here](https://vuejs.org/v2/api/#devtools)\n\n4. If non of the above doesn’t work, try loading your Vue app over a local http-server.\nHere is a simple http-server. And close and reopen your chrome tab.\n\nI was able to resolve this issue by following option 2 and 3.\n\n[vue-not-detected-3](https://lazydevguy.files.wordpress.com/2017/01/vue-is-not-detected-solved.png)"},{"id":1483381800000,"title":"When to use git rebasing and why?","author":"Malik","date":"January 3, 2017","content":"\n## When to use git rebasing and why?\n\nNote: My earlier post was [post](http://lazydevguy.blogspot.com/2015/06/useful-git-commands.html) some of the useful commands of git and how to use them\n\n#### Git rebase: Introduction\n\n[Git rebase](http://git-scm.com/docs/git-rebase) is a handy mechanism when you need merge the changes of your branch with another branch (probably with the master branch) . But the process behind a git-rebase is not that simple as the definition suggests , but it is clean and awesome. In this post, I am going to go through with the process behind a git rebase, when to use it, and when to avoid it.\n\nLet’s look at the following simple scenario..\n\nSay you are creating a development-branch out of this master branch to do your development stuff.\n\n![git-rebase-intro](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-1.png)\n\nAnd you are now working on this development-branch for sometime. You make changes, you add these changes and you commit those changes to this branch. Now after few days, you decides that it is the right time to integrate your changes to the master branch . But guess what, your team members have already pushed their changes to the master branch. So you cannot just easily merge your changes to the master without messing up the changes of your peers. Following diagram illustrates the situation\n\n![git-rebase-intro2](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-4.png)\n\nAs you can see there is a gap between the branch you are working on and the master. This is where the it rebase comes in .By using git rebase you are going to integrate your changes (commit B1, B2) with the master (Where now the head is located at commit M3),\n\n![git-rebase-intro3](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-2.png)\n\nNow the situation changes to something like below\n\n![git-rebase-intro3](https://lazydevguy.files.wordpress.com/2017/01/git-rebase-3.png)\n\nWhen you use git rebase , the commit history (commit hashes) changes entirely . That is why i have used the green color to represent the history instead of blue (color of master’s commits) or red (color of development-branch commits).\n\n#### Advantage\n\nIt creates a **Linear History** which is the very reason why we need to use git rebasing. Your history is clean flat and readable. You can identify the commits of each of your team members very easily in different timelines.\n\n#### Disadvantage\n\nIn a situation where you have so many people consistently pushing their changes to master and when there are so many branches being merged with the master, It is kind of a pain in the a** to keep your branch upto date with master using git rebase. You have to constantly do the rebasing, and might need to resolve conflicts time to time.\n\nAlso rewriting your commit history after each and every reabsing is not always a good thing. It means that your commit hashes change consistently and also, you need to **force push** every time to the remote after a rebase\n\n#### When to rebase:\nOnly when you need a clean linear history so that you can clearly see what is going on with the all the commits from all the team members.\n\n#### When not to rebase:\nIf you prefer to follow a simple mechanism where you can integrate your changes with the upstream branch without a fuss you can always go with [git merge](https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging#_basic_merging)."},{"id":1483036200000,"title":"How to face software engineering internship interviews?","author":"Malik","date":"December 30, 2016","content":"\n## How to face software engineering internship interviews ?\n\nI got the opportunity to do few interviews and mock interviews for the interns who were trying to get into the Industry as trainees. What i have noticed from the candidates are that they are extremely skillful, had good academic track records and some of them are very good at problem solving. However what i didn’t see was the preparation to face an interview. When the most common questions were asked, i saw the lack of ability to tackle those questions mainly due to the absence of preparation. So i thought of writing few tips on how to tackle an internship interview.\n\n### How to face it better ?\n\n#### First things first :\nYou should prepare a small “about-yourself ” description to introduce yourself to the interviewer . Because the first question would almost always be something like “Can you first tell us about yourself a bit” . This is something everyone easily messes-up  because it is so obvious!\n\n#### Stick to the script :\nWhen you introduce yourself to the interviewers, make sure to keep it short and sweet. It should be relevant to the internship. For example after stating the basic information (name, age, where you live), go with your overall academic records, projects you have done, any important contributions you have done to the IT community (such as open-source contributions, tech publications), any interesting hobbies and a bit about why you selected this field. You might not want to share your pet’s name, what your parents doing for a living.\n\n#### Bring a copied CV:\nIf the interview is onsite, this is important and is something always expected from a interviewee.\n\n#### Loud and clear:\nSome people are naturally soft spoken. But when it comes to interviews you need to make sure what you are saying is delivered to the interviewer. If the interviewer had to ask you again and again for something, it will create a negative impression. It will also show you that you are not in cable of having a efficient communication.\n\n#### Confidence and eye-contact:\nDon’t bore your interviewer by acting slow and dull. Show your enthusiasm in your voice and always keep a good eye contact. Attitude matters!\n\n#### Be honest:\nWhen you are asked about something about your self, make  sure you give the correct details. If you are not being honest at that time and if the interviewer later found out that you gave out incorrect details, you are done.\n\n#### About your projects:\nAlways have a look at the overall information about your university projects and you need to prepare for this before coming to the interview. There will be a question like “Tell us about your university projects”, So in that case it is important that you know how to explain what you have done . You might have done several projects, in that case, select one. 3 things need to be said during this question.\n\n1. Project description (domain, techs used, overall system architecture)\n2. What is your contribution\n3. Problems faced and the assumptions made\n\n#### Think out loud:\nYou will be given some kind of problem/scenario where you are required to provide a solution. The solution might be some pseudocode/algorithm or some high-level system design. Sometimes what happens is that you think about a solution in your head without expressing it, Which will result in a uncomfortable silence between you and the interviewer. In this case a pen and paper might come in handy. You can sketch it and show as to how you will approach the issue. So the interviewer will know you got the idea.\n\n#### Keeping your self updated:\nWhen it comes to IT field, It is imperative that you know a bit about the latest techs and trends. So always keep your knowledge polished by readings blogs, magazines etc. Also having a basic knowledge about the company is a must. Go through the company’s website, Facebook page, LinkedIn or another SM accounts and get an overall idea as a part of the preparation for the interview.\n\n#### Social media profile:\nHaving a LinkedIn profile is a good way of marketing your self for a job. Remember to include this in your CV. Also if you managed a blog, if you have a stackoverflow or a github account , share it with your interviewer. This will help him to understand your skills better.\n\n#### Passion and Mission:\nAnother obvious question is “How do you see yourself in n number of years”. Always prepare for this question before the interview. Also your plans should be relevant to the internship and the field.\n\n#### Ask questions:\nWhen you are asked a question such as ” Do you have any questions to be asked from us ? ”. Keep at least two questions prepared to ask at this point which also needs to be relevant to the context.\nFor Example :\n\n1. What are the new projects are being developed by your company ?\n2. How this place will help me to improve my career path ?\n3. If i get selected , what projects would be assigned to me ? what kind of part would i play in the company/project ?\n\n"},{"id":1482949800000,"title":"How to merge your silly little commits into one","author":"Malik","date":"December 29, 2016","content":"## Git : How to merge your silly little commits into one\n\nThere are three kinds of git users. People who commits every single change ; People who wait and compile all the changes into one gigantic commit. And the last kind is the best kind, who commits in a responsible way. I used to be the first kind, but realized later it is annoying to the people who reviews my PR’s. So here is the thing, git has 2 helpful ways of dealing with this problem.\n\n1. git squash\n2. git reset\n\nHere is the scenario. Say if you made some commits with small changes like remove small space 1, change variable name, remove space 2. Later you realize the commits are kind of silly, you want all these commits to be merge into one called something like code cleanup.\n\nUsing squash for this problem a bit complex (not if you get used to it). But it sort of gives you an overall idea on what is happening. This is how you do it.\n\n## Method 1: Using squash\n\nFirst of all make sure your master branch is up-to date with the related upstream branch. And say you are in a feature branch called, well feature-branch.\n\nin your git bash, run this command `git rebase -i master`\n\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-1.png)\n\nyou will get the vim interactive console and you will see all of your 3 commits listed.\n\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-2.png)\n\nHere the process is simple. You can pick one commit which can be your parent commit  using pick, and the rest of the commits can be linked under this parent commit using squash command. Also you can change the order of the commits as well. So according to our scenario, we can follow this way.\n\nAnd that is it. Just save and exit. And you will get another interactive console like below.\n\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-5.png)\n\nAnd you have successfully merge 3 of your commits into one commit which is going to make a better commit history for you. Now you can just run `git push origin feature-branch –force` to push your single commit to the remote repository.\n\nNote: we are using `–force` because this process has changed the commit hashes. In any case, when you use force push, you need to absolutely make sure you know what you are doing.\n\nIf you view the commit history, you can see the squashed commits like this visualized in a different way.\n\n![git squash](https://lazydevguy.files.wordpress.com/2016/12/git-sqush-6.png)\n\nSo that’s how you squash your commits in Git. It is a bit time consuming process, but if you get used to it, it is very useful\n\n\n## Method 2: Using `git reset`\n\nSo unlike squashing your commits, you can easily merge your little commits into one using git reset command. It is really simple. Take the same scenario i have mentioned above. Now what you need is, Taking the HEAD position 3 commits back. By doing this you are resetting the last 3 commits.\n\n```\ngit reset –soft HEAD~3\n```\n\nNow you have un-stage changes. All you need to do now is to put them into a single commit.\n\n```\ngit commit -m “Code cleanup”\n```\n\nOr do these both together\n\n```\ngit reset –soft HEAD~3 && git commit -m “Code cleanup”\n```\n\nNow push `–force` to push the new commit into the remote repository. The same warning regarding force push applies here as well.\n\nmore info on squashing can be found [here](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History)"},{"id":1454783400000,"title":"Resolve NPM install \"unmet dependency\" warning","author":"Malik","date":"February 7, 2016","content":"## Resolve NPM install `unmet dependency` warning\n\nSometimes when you try to install node modules, npm prompts the following warning message:\n\n![npm dependency issue](https://lazydevguy.files.wordpress.com/2016/02/capture.png)\n\n> npm WARN unmet dependency undefined,\nnpm WARN unmet dependency which is version undefined\n\nBecause of this some of the node modules might not get installed correctly. There are couple of main reasons why this could happen.\n\n1. You might be using a older version of NPM.\nSolution : Check your NPM version and make sure it is upto date . If not try updating your NPM application globally.\n\n2. Network interruptions while downloading dependencies or NPM cache problems Solution:  `rm -rf` the local node_modules folder and run `npm cache clean`. This should enable you to run a clean `npm install`. again."},{"id":1435170600000,"title":"Git rebase merge conflict resolving. Did you forget to use add?","author":"Malik","date":"June 25, 2015","content":"\n## Git rebase merge conflict resolving. Did you forget to use add?\n\nSometimes when you rebase your branch with the master branch and after fixing a merge conflict you might encounter following issue\n\n### The loopy problem of git rebasing\n\n```\n$ git rebase –continue\nApplying: loglevel equal to silent\nNo changes – did you forget to use ‘git add’?\n```\n\nIf there is nothing left to stage, chances are that something else. already introduced the same changes; you might want to skip this patch.\n\nWhen you have resolved this problem, run `git rebase –continue`. If you prefer to skip this patch, run `git rebase –skip` instead.\nTo check out the original branch and stop rebasing, run `git rebase –abort`.\n\n![git-rebase-loop](https://lazydevguy.files.wordpress.com/2015/06/git2.png)\n\nBut the problem you might having is that you have already added the file using git add `yourconfilctedfilename`  And might have added several times but still Git telling you to add the file again??\n\n### The loopy problem of git rebasing\nI have encountered this issue couple of times and it turns out is a [git bug](https://github.com/git/git/commit/95104c7e257652b82aed089494def344e3938928) which was later fixed with Git 2.0.2 version. So anyway in this case rather than updating your git application, you can simply do the git rebase –skip and just skip the patch. It will not do any harm because the patch was empty anyway."},{"id":1435084200000,"title":"How to set Visual Studio Version With NPM","author":"Malik","date":"June 24, 2015","content":"## How to set Visual Studio Version With NPM\n\nWhen you install NPM modules in windows environment  , some times you might ran into an error like below.\n\n> C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\Microsoft.Cpp.Platform.targets(64,5): error MSB8020: The build tools for Visual Studio 2010 (Platform Toolset = ‘v100’) cannot be found. To build using the v100 build tools, please install Visual Studio 2010 build tools. Alternatively, you may upgrade to the current Visual Studio tools by selecting the Project menu or right-click the solution, and then selecting “Upgrade Solution…”. [C:\\Users\\Documents\\FLIS.Client.Tests\\node_modules\\karma\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\ws\\build\\bufferutil.vcxproj]\n\nAs you can see the error says that it cannot find the Visual studio 2010 platform toolset. In this case you can externally specify build platform toolset to NPM like this.\n\n```\n–msvs-version=2013 // I am running visual studio 2013 . So…\n```\n\nFor E.g If you want to install protractor with `–msvs-version=2013`\n\n```\nnpm install protractor –msvs-version=2013\n```"},{"id":1422988200000,"title":"Difference between $scope and $rootscope","author":"Malik","date":"February 4, 2015","content":"\n## Difference between \\$scope and \\$rootscope\n\nWhenever you declare a controller in angular , you automatically create a `$scope` which is relevant to that controller.\n\n### So what does a \\$scope mean\n\nfrom documentation\n> `$scope` is an object that refers to the application model. It is an execution context for expressions. `$scopes` are arranged in hierarchical structure which mimic the DOM structure of the application. `$scope` can watch expressions and propagate events.” .\n\nIn simpler terms it means that it is a way of tying an object to the DOM . If you consider the MVC model in Angular , the scope acts as a model . It is a template which hosts all the functions and the related data . Okay now that we have gotten some insight into the `$scope`.\n\nNow let talk about `$rootscope`.\n\n`$rootscope` is the parent (more like a root parent) of all the `$scopes` you create . It is the ultimate boss . It is (almost) like the Object class of Java .It is the top most `$scope` of your app and it contains ng-app directive . There is only one `$rootscope` for each of the Angular application .\n\n![ difference ](https://lazydevguy.files.wordpress.com/2015/02/blog.png)"}]